LazarusResources.Add('TWbotCE','PNG',[
  #137'PNG'#13#10#26#10#0#0#0#13'IHDR'#0#0#0' '#0#0#0' '#8#6#0#0#0'szz'#244#0#0
  +#10'7iCCPsRGB IEC61966-2.1'#0#0'x'#156#157#150'wTS'#217#22#135#207#189'7'#189
  +'P'#146#16#138#148#208'khR'#2'H'#13#189'H'#145'.*1'#9#16'J'#192#144#0'"6DTpD'
  +'Q'#145#166#8'2('#224#128#163'C'#145#177'"'#138#133#1'Q'#177#235#4#25'D'#212
  +'qp'#20#27#150'Id'#173#25#223#188'y'#239#205#155#223#31#247'~k'#159#189#207
  +#221'g'#239'}'#214#186#0#144#252#131#5#194'LX'#9#128#12#161'X'#20#225#231#197
  +#136#141#139'g`'#7#1#12#240#0#3'l'#0#224'p'#179#179'B'#22#248'F'#2#153#2'|'
  +#216#140'l'#153#19#248#23#189#186#14' '#249#251'*'#211'?'#140#193#0#255#159
  +#148#185'Y"1'#0'P'#152#140#231#242#248#217'\'#25#23#201'8=W'#156'%'#183'O'
  +#201#152#182'4M'#206'0J'#206'"Y'#130'2V'#147's'#242',[|'#246#153'e'#15'9'#243
  +'2'#132'<'#25#203's'#206#226'e'#240#228#220''''#227#141'9'#18#190#140#145'`'
  +#25#23#231#8#248#185'2'#190'&c'#131'tI'#134'@'#198'o'#228#177#25'|N6'#0'('
  +#146#220'.'#230'sSdl-c'#146'(2'#130'-'#227'y'#0#224'H'#201'_'#240#210'/X'#204
  +#207#19#203#15#197#206#204'Z.'#18'$'#167#136#25'&\S'#134#141#147#19#139#225
  +#207#207'M'#231#139#197#204'0'#14'7'#141'#'#226'1'#216#153#25'Y'#28#225'r'#0
  +'f'#207#252'Y'#20'ym'#25#178'";'#216'8980m-m'#190'('#212#127']'#252#155#146
  +#247'v'#150'^'#132#127#238#25'D'#31#248#195#246'W~'#153#13#0#176#166'e'#181
  +#217#250#135'mi'#21#0']'#235#1'P'#187#253#135#205'`/'#0#138#178#190'u'#14'}q'
  +#30#186'|^R'#196#226',g+'#171#220#220'\K'#1#159'k)/'#232#239#250#159#14#127
  +'C_|'#207'R'#190#221#239#229'ax'#243#147'8'#146't1C^7nfz'#166'D'#196#200#206
  +#226'p'#249#12#230#159#135#248#31#7#254'u'#30#22#17#252'$'#190#136'/'#148'ED'
  +#203#166'L L'#150#181'['#200#19#136#5#153'B'#134'@'#248#159#154#248#15#195
  +#254#164#217#185#150#137#218#248#17#208#150'X'#2#165'!'#26'@~'#30#0'(*'#17' '
  +#9'{d+'#208#239'}'#11#198'G'#3#249#205#139#209#153#152#157#251#207#130#254'}'
  +'W'#184'L'#254#200#22'$'#127#142'cGD2'#184#18'Q'#206#236#154#252'Z'#2'4 '#0
  +'E@'#3#234'@'#27#232#3#19#192#4#182#192#17#184#0#15#224#3#2'A('#136#4'q`1'
  +#224#130#20#144#1'D '#23#20#128#181#160#24#148#130#173'`'''#168#6'u'#160#17
  +'4'#131'6p'#24't'#129'c'#224'48'#7'.'#129#203'`'#4#220#1'R0'#14#158#128')'
  +#240#10#204'@'#16#132#133#200#16#21'R'#135't C'#200#28#178#133'X'#144#27#228
  +#3#5'C'#17'P'#28#148#8'%CBH'#2#21'@'#235#160'R'#168#28#170#134#234#161'f'#232
  +'['#232'(t'#26#186#0#13'C'#183#160'Qh'#18#250#21'z'#7'#0'#9#166#193'Z'#176#17
  +'l'#5#179'`O8'#8#142#132#23#193#201#240'28'#31'.'#130#183#192#149'p'#3'|'#16
  +#238#132'O'#195#151#224#17'X'#10'?'#129#167#17#128#16#17':'#162#139'0'#17#22
  +#194'FB'#145'x$'#9#17'!'#171#144#18#164#2'i@'#218#144#30#164#31#185#138'H'
  +#145#167#200'['#20#6'EE1PL'#148#11#202#31#21#133#226#162#150#161'V'#161'6'
  +#163#170'Q'#7'P'#157#168'>'#212'U'#212'(j'#10#245#17'MFk'#162#205#209#206#232
  +#0't,:'#25#157#139'.FW'#160#155#208#29#232#179#232#17#244'8'#250#21#6#131#161
  +'c'#140'1'#142#24#127'L'#28'&'#21#179#2#179#25#179#27#211#142'9'#133#25#198
  +#140'a'#166#177'X'#172':'#214#28#235#138#13#197'r'#176'bl1'#182#10'{'#16'{'
  +#18'{'#5';'#142'}'#131'#'#226'tp'#182'8_\<N'#136'+'#196'U'#224'Zp''pWp'#19
  +#184#25#188#18#222#16#239#140#15#197#243#240#203#241'e'#248'F|'#15'~'#8'?'
  +#142#159'!('#19#140#9#174#132'HB*a-'#161#146#208'F8K'#184'KxA$'#18#245#136'N'
  +#196'p'#162#128#184#134'XI<D<O'#28'%'#190'%QHf$6)'#129'$!m!'#237''''#157'"'
  +#221'"'#189' '#147#201'Fd'#15'r<YL'#222'Bn&'#159'!'#223''''#191'Q'#160'*X*'#4
  +'('#240#20'V+'#212'(t*\Qx'#166#136'W4T'#244'T\'#172#152#175'X'#161'xDqH'#241
  +#169#18'^'#201'H'#137#173#196'QZ'#165'T'#163'tT'#233#134#210#180'2U'#217'F9T'
  +'9Cy'#179'r'#139#242#5#229'G'#20','#197#136#226'C'#225'Q'#138'('#251'(g(cT'
  +#132#170'OeS'#185#212'u'#212'F'#234'Y'#234'8'#13'C3'#166#5#208'Ri'#165#180'o'
  +'h'#131#180')'#21#138#138#157'J'#180'J'#158'J'#141#202'q'#21')'#29#161#27#209
  +#3#232#233#244'2'#250'a'#250'u'#250';U-UOU'#190#234'&'#213'6'#213'+'#170#175
  +#213#230#168'y'#168#241#213'J'#212#218#213'F'#212#222#169'3'#212'}'#212#211
  +#212#183#169'w'#169#223#211'@i'#152'i'#132'k'#228'j'#236#209'8'#171#241't'#14
  +'m'#142#203#28#238#156#146'9'#135#231#220#214#132'5'#205'4#4Wh'#238#211#28
  +#208#156#214#210#214#242#211#202#210#170#210':'#163#245'T'#155#174#237#161
  +#157#170#189'C'#251#132#246#164#14'U'#199'MG'#160#179'C'#231#164#206'c'#134
  +#10#195#147#145#206#168'd'#244'1'#166't5u'#253'u%'#186#245#186#131#186'3z'
  +#198'zQz'#133'z'#237'z'#247#244#9#250','#253'$'#253#29#250#189#250'S'#6':'#6
  +'!'#6#5#6#173#6#183#13#241#134','#195#20#195']'#134#253#134#175#141#140#141
  +'b'#140'6'#24'u'#25'=2V3'#14'0'#206'7n5'#190'kB6q7Yf'#210'`r'#205#20'c'#202
  +'2M3'#221'mz'#217#12'6'#179'7K1'#171'1'#27'2'#135#205#29#204#5#230#187#205
  +#135'-'#208#22'N'#22'B'#139#6#139#27'L'#18#211#147#153#195'le'#142'Z'#210'-'
  +#131'-'#11'-'#187','#159'Y'#25'X'#197'[m'#179#234#183#250'hmo'#157'n'#221'h}'
  +#199#134'b'#19'hSh'#211'c'#243#171#173#153'-'#215#182#198#246#218'\'#242'\'
  +#223#185#171#231'v'#207'}ngn'#199#183#219'cw'#211#158'j'#31'b'#191#193#190
  ,#215#254#131#131#163#131#200#161#205'a'#210#209#192'1'#209#177#214#241#6#139
  +#198#10'cmf'#157'wB;y9'#173'v:'#230#244#214#217#193'Y'#236'|'#216#249#23#23
  +#166'K'#154'K'#139#203#163'y'#198#243#248#243#26#231#141#185#234#185'r\'#235
  +']'#165'n'#12#183'D'#183#189'nRw]w'#142'{'#131#251#3#15'}'#15#158'G'#147#199
  +#132#167#169'g'#170#231'A'#207'g^'#214'^"'#175#14#175#215'lg'#246'J'#246')o'
  +#196#219#207#187#196'{'#208#135#226#19#229'S'#237's'#223'W'#207'7'#217#183
  +#213'w'#202#207#222'o'#133#223')'#127#180#127#144#255'6'#255#27#1'Z'#1#220
  +#128#230#128#169'@'#199#192#149#129'}A'#164#160#5'A'#213'A'#15#130#205#130'E'
  +#193'=!pH`'#200#246#144#187#243#13#231#11#231'w'#133#130#208#128#208#237#161
  +#247#194#140#195#150#133'}'#31#142#9#15#11#175#9#127#24'a'#19'Q'#16#209#191
  +#128#186'`'#201#130#150#5#175'"'#189'"'#203'"'#239'D'#153'DI'#162'z'#163#21
  +#163#19#162#155#163'_'#199'x'#199#148#199'Hc'#173'bW'#198'^'#138#211#136#19
  +#196'u'#199'c'#227#163#227#155#226#167#23#250','#220#185'p<'#193'>'#161'8'
  +#225#250'"'#227'Ey'#139'.,'#214'X'#156#190#248#248#18#197'%'#156'%G'#18#209
  +#137'1'#137'-'#137#239'9'#161#156#6#206#244#210#128#165#181'K'#167#184'l'#238
  +'.'#238#19#158#7'o'#7'o'#146#239#202'/'#231'O$'#185'&'#149'''=JvM'#222#158'<'
  +#153#226#158'R'#145#242'T'#192#22'T'#11#158#167#250#167#214#165#190'N'#11'M'
  +#219#159#246')=&'#189'='#3#151#145#152'qTH'#17#166#9#251'2'#181'3'#243'2'#135
  +#179#204#179#138#179#164#203#156#151#237'\6%'#10#18'5eC'#217#139#178#187#197
  +'4'#217#207#212#128#196'D'#178'^2'#154#227#150'S'#147#243'&7:'#247'H'#158'r'
  +#158'0o`'#185#217#242'M'#203''''#242'}'#243#191'^'#129'Z'#193']'#209'['#160
  +'['#176#182'`t'#165#231#202#250'U'#208#170#165#171'zW'#235#175'.Z='#190#198
  +'o'#205#129#181#132#181'ik'#127'('#180'.,/|'#185'.f]O'#145'V'#209#154#162#177
  +#245'~'#235'['#139#21#138'E'#197'76'#184'l'#168#219#136#218'('#216'8'#184'i'
  +#238#166#170'M'#31'Kx%'#23'K'#173'K+J'#223'o'#230'n'#190#248#149#205'W'#149
  +'_}'#218#146#180'e'#176#204#161'l'#207'V'#204'V'#225#214#235#219#220#183#29
  +'(W.'#207'/'#31#219#30#178#189's'#7'cG'#201#142#151';'#151#236#188'PaWQ'#183
  +#139#176'K'#178'KZ'#25'\'#217']eP'#181#181#234'}uJ'#245'H'#141'WM{'#173'f'
  +#237#166#218#215#187'y'#187#175#236#241#216#211'V'#167'UWZ'#247'n'#175'`'#239
  +#205'z'#191#250#206#6#163#134#138'}'#152'}9'#251#30'6F7'#246#127#205#250#186
  +#185'I'#163#169#180#233#195'~'#225'~'#233#129#136#3'}'#205#142#205#205'-'#154
  +'-e'#173'p'#171#164'u'#242'`'#194#193#203#223'x'#127#211#221#198'l'#171'o'
  +#167#183#151#30#2#135'$'#135#30#127#155#248#237#245#195'A'#135'{'#143#176#142
  +#180'}g'#248']m'#7#181#163#164#19#234'\'#222'9'#213#149#210'%'#237#142#235#30
  +'>'#26'x'#180#183#199#165#167#227'{'#203#239#247#31#211'=Vs\'#229'x'#217#9
  +#194#137#162#19#159'N'#230#159#156'>'#149'u'#234#233#233#228#211'c'#189'Kz'
  +#239#156#137'=s'#173'/'#188'o'#240'l'#208#217#243#231'|'#207#157#233#247#236
  +'?y'#222#245#252#177#11#206#23#142'^d]'#236#186#228'p'#169's'#192'~'#160#227
  +#7#251#31':'#6#29#6';'#135#28#135#186'/;]'#238#25#158'7|'#226#138#251#149#211
  +'W'#189#175#158#187#22'p'#237#210#200#252#145#225#235'Q'#215'o'#222'H'#184'!'
  +#189#201#187#249#232'V'#250#173#231#183'sn'#207#220'Ys'#23'}'#183#228#158#210
  +#189#138#251#154#247#27'~4'#253#177']'#234' =>'#234'=:'#240'`'#193#131';c'
  +#220#177'''?e'#255#244'~'#188#232'!'#249'a'#197#132#206'D'#243'#'#219'G'#199
  +'&}''/?^'#248'x'#252'I'#214#147#153#167#197'?+'#255'\'#251#204#228#217'w'#191
  +'x'#252'20'#21';5'#254'\'#244#252#211#175#155'_'#168#191#216#255#210#238'e'
  +#239't'#216#244#253'W'#25#175'f^'#151#188'Q'#127's'#224'-'#235'm'#255#187#152
  +'w'#19'3'#185#239#177#239'+?'#152'~'#232#249#24#244#241#238#167#140'O'#159'~'
  +#3#247#132#243#251#143'pf*'#0#0#0#9'pHYs'#0#0'.#'#0#0'.#'#1'x'#165'?v'#0#0#6
  +#179'IDATx'#156#197#151#9'lTE'#24#199#255#239#237#193'v'#183#237#238#246#176
  +'RZ'#11#213'Rb9'#4#20'A<H'#12#135#24#16'5'#6#141#23#138#26'5Q'#139'''MHHE'
  +#188'5$x+('#168#160'D'#163' '#162'@bP'#185'D'#4'I'#5#161'--'#133#182'lw'#217
  +#238#219#238#190'}o'#223'1'#227#247#182#5#151'Ze'#17#140#147#188#238#188'y'
  +#223#204#247#155'o'#254#223#204#212#206'9'#199#255'Y'#236'g'#210#185#188#246
  +'{W'#211#252#171#212#255#13' '#135#5'k'#135#214'|'#252#203'o'#207#221#186#234
  +'?'#5#24#255#238#246'a['#238#29'['#215#187']'#9#183#190#198#12#161#161'|'#214
  +#243'G'#154'>'#152#187#237'?'#1#184#244#165#245#149'&3'#159#162#234'm'#233
  +#237'e'#183'/'#184'^W'#213#247#152#174#247#3#248#23'E3'#158#156#221#241#229
  +#139'_'#159'u'#128'X'#228'X'#127#166'%'''#13'~'#248#205#215#153#161#219#244
  +'0'#155#211#242'i'#181'"'#135#195'#L%'#145'Gm0u'#173#136'L'#215#228#140#191
  +#235#174#216#150#247#151#159'U'#0'%'#28#16#185#166#23#154'I'#245'AS'#215#193
  +'t'#211#10#245'2%'#28'\b*J'#141#169'&'#156'='#166#162'`w'#188'%'#14#155#182
  +#129#213'}'#21'H'#31'c'#204#171#223#142#220#249#248#212'_'#25'c'#127'I'#185
  +'S'#2'$%i'#150#30#143#129#0#200'9'#1'0s'#156#5' '#255#180#226#136'8'#240#138
  +#163#208#181'203e+'#216#157'Y'#176#187'.'#167#234'g'#233'c'#200#29#129'iU5'
  ,#31#13#183#250#157'6'#128#26#14#141#214#19#9#24#138'L'#16'Ipf'#222'-'#14#158
  +#244#9#171#223#176#9'J'#156#131#25'''l'#185#169#1'z'#242#164'Y'#150#221#185
  +'p'#182#205#225#152'J'#209'I'#254'+'#128'dT'#138'k'#177'('#152'*'#131#27#228
  +#128's'#7#4'a'#185'('#138'e'#200#175#218#193'9'#27'HT4}'#1#2#196#239#17#140
  +#175'='#222#183#224#154#234#203#4#17#239'PU'#180'9'#156#188#228#150'y'#163'Z'
  +'W>'#179#235#180#0#200#249'j&G'#199'p'#157#246#27'S?'#222#220#31'(u'#129')'
  +#247#1#142':'#2'('#2#19'6'#243#232#254#207'9'#251'3$r'#176'}'#158'@'#206'E'
  +#135#3#4' '#216'\Y'#143#162'W6'#157#18#192#172'o}'#25#231#216#135#195'4frk'
  +#166#224'ar'#248#24'g-'#10#189'X'#207'3}'#245#19#203'''_$'#10#198#148#19#239
  +#253'H'#30'Y'#238#25#20'9'#145#196#200#250#4#24']'#187#166#248#151#249#211
  +#219#211#219#24#171#163#184#227'f1'#191#234')'#130#232#143'.uO'#143#243#127
  +'.Ii.34'#161#219#187#13'\S'#192#146#138#139#222#132't'#179#147#0#148#248#177
  +'g+'#30'X'#252'aR'#149'G'#147#232'~'#15#172'Z'#184#246'x'#234#176#240#222#22
  +#250'iI'#183#23#196's'#179#225#205#29'O'#213#10#210#128#157#244#209'NY'#177
  +#153#199#15#181'CK'#148'R'#180'zfa'#164#4#202'Mc'#3#141'g'#254'-'#128'|,'#216
  +#164#199#186'6'#26'JB'#208#228'8<'#151#222#186#193's'#201#204'{'#229#159'?=|'
  +#146'coI'#1'l'#238'Z'#248#188#179'hq'#221#164#240'T;'#167'M'#137'@'#152#144
  +'W'#185#158'x>'#230'0+'#168#161#176'['#160#194'.'#24#241'{z'#7#234'$'#0'5'#28
  +'X'#169#197#149'ZK'#245':'#1#152#170'2'#137#200#247#137#165#151'='#143'6'#253
  +#5#198'~'#214#5#127#197#197#176'yV'#139'n_'#177#205#227#131#232#242#192#230
  +#236#222#139'LM'#179#178'E4e'#233#26#150#144#174#166#136#204#177#214#144#182
  +'('#5#209#131#187#210#215#190'O'#128#142'5'#139#26#178'F'#222#212#172#199#164
  +'AL'#141#3'F'#210#10#159#135#6'Z'#128'|'#12#16'|'#231'/'#130'h'#223'h'#207'+'
  +#246'9'#253'E'#150#168'pae9'#242#253#185#168#157'}'#29'B'#145'.,^'#249#13#6
  +#23#23'`'#201#135#171#156#177#246#230#215'h'#157#238#224#145#250#143'z;'#238
  +#19#192'*F"'#182#148#156'/'#128#174't'#175#157#165'|'#235#210'"'#8'C'#200#249
  +'r'#203'y'#191#130#1#200#242#231#225#134#137#227#240'F'#245#205'X'#188'v+FW'
  +#150#161'f'#233':,'#153#127'?'#206#205#203#133#199#147#133#23#22#189'#'#24
  +#157#237'o'#10#217#149#155'x'#252'@kF'#0#166#26'{'#133#28'O'#164'T'#187'2%"'
  +#203'9m'#127'0'#217'f1;o'#158'5s'#151#207#143#154'{n'#132#203#227#161#232#10
  +#24'\V'#130#253'G#'#184'|'#212#16#228'{'#179#241#228#187'_a)AY'#182'LMd3HO'
  +#208#208#143'd'#4#192'Z'#182'("%1'#242#221's'#200#255'U'#212#212#14#134#183
  +#201#211'C'#214#154'[a'#207#241#251'q'#237#216#161#248#181'5'#140'u'#251#218
  +'PH3'#22#29'N'#184#221'n<'#186#226#7'|'#179#187#25#206#236#28#232#9#25'V'#31
  +#210#195'LA'#20#171'y'#166#135#17'cM'#214'5'#235#185#158'''U'#132#194#161#203
  +','#193'9'#220#30#204#189'}*~<'#208#6#175#223#139'1'#3#11'Q'#232#233#22#225
  +'y~7'#162#170#142'`g'#12#219'b])'#219'$'#245#161'L)BV9'#165'%'#14#247#246#149
  +#241#149#140'R-'#223'R'#187'`'#179#161'>'#16#193#196'K'#138#225#247#230#156
  +'p'#222#24'3'#161#168'I'#204#24'^'#138#223#14#5#176#163'n'#127#202'6'#213#135
  +#210#148#247#211#243#207#8#128'J'#140#158#2#171'2eT'#5'4'#202'('#183#195#150
  +#250#240'cP'#195#8#191#3#17'n'#199#183#7':'#208#28#138#254#181'7c'#241#190#6
  +#205#24#128'6'#153':'#202#243'A'#220'4q'#176'-'#4#23#173'q'#161'/;'#245'-('
  +#201'xzo'#12#219#27#143'B'#233#12'!'#17#236#232'>'#186#201#214#218#27#168'o'
  +#28']'#7#15#157#17#0#157#132#171'i'#147#153'n'#9#235#243'M;Q=s'#10#14#180#29
  +#195#176'b?&'#148'xP'#238#17'!FCX'#215',Q'#6#203't'#127'H'#164'Dh'#29#227#212
  +'w'#29#9'P'#239'k'#216#204#1'$}'#133#225#150#158'5'#20#127#209#193#166'#xq'
  +#229'z'#8#238'l'#12#240#186'i'#227#201#195#222#195#1','#156'6'#18#187#247#236
  +#195'~)'#2#141'nQ'#22#132'!K'#140#210#248#165#191#27#246'44'#16'w'#240#132
  +#221#171'E'#220#8#218#236#232#146#21'L'#24';'#2'm'#129#16'd9'#129#198'Cmh*'
  +#205#195#212#170#18#236#222#182#3#170#5#17#233#0#151#165'Wy'#164'a'#231#153#3
  +#228#250#167#211'_'#23#237'l'#169'W:'#217#176#241#187#173#216#180'}OJ'#237'V'
  +#217#186'}7'#26#155#143#208'E6'#148'rN'#182#203#16'm'#152#251'O'#195'f'#14' '
  +#226#166#227'U'#163#179'-H'#183#225#144#221#227#171'J'#166#29'F?'#180#30'N'
  +#173'9'#133'='#192#19#145'y'#188#179'~'#201#169#134#205#8'@'#16'+s'#225#195
  +#16#154#247'"'#152#194#23#136'5n'#225#18']'#146's/'#24#7#187's2'#229#249#5't'
  +#222':'#184#174#183#210#173'c3$'#147'D'#215#148#209#255#140#25'F'#160'!'#193
  +';'#217#144'>>l'#237'y'#254'u'#201#8' '#253#162'y'#182#203#31#234#188'['#248
  +#207']'#167'r'#0#0#0#0'IEND'#174'B`'#130
]);
LazarusResources.Add('wbotce','JS',[
  '//Version_JS;Version_TInjectMin;Version_CEF4Min;'#10'//1.0.8.0;1.0.0.9;78.3.'
  +'0'#10'//'#10'//'#10#10'function getAllGroupContacts(Contacts) {'#10#9'SetCo'
  +'nsoleMessage("GetAllGroupContacts", JSON.stringify(Contacts));'#9#10'}'#10
  +#10'function getMyNumber() {'#10'    SetConsoleMessage(''getMyNumber'', loca'
  +'lStorage.getItem(''last-wid''));'#10'    return true;'#10'}'#10#10#10'funct'
  +'ion convertImgToBase64URL(url, callback, outputFormat){'#10#9'var img = new'
  +' Image();'#10'    img.crossOrigin = ''Anonymous'';'#10'    img.onload = fun'
  +'ction(){'#10'        var canvas = document.createElement(''CANVAS''),'#10' '
  +'       ctx = canvas.getContext(''2d''), dataURL;'#10'        canvas.height '
  +'= img.height;'#10'        canvas.width = img.width;'#10'        ctx.drawIma'
  +'ge(img, 0, 0);'#10'        dataURL = canvas.toDataURL(outputFormat);'#10'  '
  +'      callback(dataURL);'#10'        canvas = null; '#10'    };'#10'    img'
  +'.src = url;'#10'};'#10#10'function SetConsoleMessage(jsName, resultValue) {'
  +#10'    Obj = {'#10'        name: jsName,'#10'        result: ''{"result":'''
  +' + resultValue + ''}'''#10'    }'#10'    console.log(JSON.stringify(Obj));'
  +#10'}'#10#10'var intervalMonitor;'#10'var isLoggedStatus = false;'#10'var ge'
  +'ttingUnreadMessages = false;'#10#10'function startMonitor(intervalSeconds ='
  +' 0) {'#10'    isLoggedStatus = WAPI.isLoggedIn();'#10#9#10'    if (interval'
  +'Seconds >= 1) {'#10'        intervalMonitor = window.setInterval(monitorUnR'
  +'eadMessages, intervalSeconds * 1000);'#10'    }'#10'}'#10#10'function stopM'
  +'onitor() {'#10'    window.clearInterval(intervalMonitor)'#10'}'#10#10'funct'
  +'ion removeElementsByClass(elementClass) {'#10'    var elements = document.g'
  +'etElementsByClassName(elementClass);'#10'    if (typeof elements !== ''unde'
  +'fined'' && elements.length > 0) {'#10'        for (var i = 0; i < elements.'
  +'length; i++) {'#10'            elements[i].parentNode.removeChild(elements['
  +'i]);'#10'        }'#10'    }'#10'}'#10#10'function moveElementsToParentPare'
  +'ntElement(elementClass) {'#10'    var elements = document.getElementsByClas'
  +'sName(elementClass);'#10'    if (typeof elements !== ''undefined'' && eleme'
  +'nts.length > 0) {'#10'        for (var i = 0; i < elements.length; i++) {'
  +#10'            var element = elements[i];'#10'            element.parentNod'
  +'e.parentNode.appendChild(element);'#10'        }'#10'    }'#10'}'#10#10'fun'
  +'ction monitorUnReadMessages() {'#10'    if (gettingUnreadMessages) return;'
  +#10'    '#10'    gettingUnreadMessages = true;'#10'    '#10'    var currentS'
  +'tatus = WAPI.isLoggedIn();'#10'    if (currentStatus != isLoggedStatus) {'
  +#10'        isLoggedStatus = WAPI.isLoggedIn();'#10'        SetConsoleMessag'
  +'e("OnChangeConnect", JSON.stringify(isLoggedStatus));'#10'    }'#10#10'    '
  +'if (isLoggedStatus) {'#10'        WAPI.getUnreadMessages(includeMe = "true"'
  +', includeNotifications = "true", use_unread_count = "true");'#10'    }'#10
  +'    gettingUnreadMessages = false;'#10'}'#10#10'if (!window.Store||!window.'
  +'Store.Msg) {'#10'    (function () {'#10'        function getStore(modules) '
  +'{'#10'            let foundCount = 0;'#10'            let neededObjects = ['
  +#10'                { id: "Store", conditions: (module) => (module.default &'
  +'& module.default.Chat && module.default.Msg) ? module.default : null},'#10
  +'  '#9#9#9#9'{ id: "Conn", conditions: (module) => (module.default && module'
  +'.default.ref && module.default.refTTL) ? module.default : (module.Conn ? mo'
  +'dule.Conn : null)},'#10'                { id: "MediaCollection", conditions'
  +': (module) => (module.default && module.default.prototype && (module.defaul'
  +'t.prototype.processFiles !== undefined||module.default.prototype.processAtt'
  +'achments !== undefined)) ? module.default : null },'#10'                { i'
  +'d: "MediaProcess", conditions: (module) => (module.BLOB) ? module : null },'
  +#10'                { id: "Archive", conditions: (module) => (module.setArch'
  +'ive) ? module : null },'#10'                { id: "Block", conditions: (mod'
  +'ule) => (module.blockContact && module.unblockContact) ? module : null },'
  +#10'                { id: "ChatUtil", conditions: (module) => (module.sendCl'
  +'ear) ? module : null },'#10#9#9#9#9'{ id: "GroupInvite", conditions: (modul'
  +'e) => (module.sendQueryGroupInviteCode ) ? module : null },'#10'           '
  +'     { id: "Wap", conditions: (module) => (module.createGroup) ? module : n'
  +'ull },'#10'                { id: "ServiceWorker", conditions: (module) => ('
  +'module.default && module.default.killServiceWorker) ? module : null },'#10
  +'                { id: "State", conditions: (module) => (module.STATE && mod'
  +'ule.STREAM) ? module : null },'#10'                { id: "_Presence", condi'
  +'tions: (module) => (module.setPresenceAvailable && module.setPresenceUnavai'
  +'lable) ? module : null },'#10'                { id: "WapDelete", conditions'
  +': (module) => (module.sendConversationDelete && module.sendConversationDele'
  ,'te.length == 2) ? module : null },'#10'                { id: ''FindChat'', '
  +'conditions: (module) => (module && module.findChat) ? module : null},'#9#9#9
  +#9#10#9#9#9#9'{ id: "WapQuery", conditions: (module) => (module.default && m'
  +'odule.default.queryExist) ? module.default : null },'#9#9#9#9#10'          '
  +'      { id: ''Perfil'', conditions: (module) => module.__esModule === true '
  +'&& module.setPushname && !module.getComposeContents ? module : null},'#10#9
  +#9#9#9'{ id: "CryptoLib", conditions: (module) => (module.decryptE2EMedia) ?'
  +' module : null },'#10'                { id: "OpenChat", conditions: (module'
  +') => (module.default && module.default.prototype && module.default.prototyp'
  +'e.openChat) ? module.default : null },'#10'                { id: "UserConst'
  +'ructor", conditions: (module) => (module.default && module.default.prototyp'
  +'e && module.default.prototype.isServer && module.default.prototype.isUser) '
  +'? module.default : null },'#10'                { id: "SendTextMsgToChat", c'
  +'onditions: (module) => (module.sendTextMsgToChat) ? module.sendTextMsgToCha'
  +'t : null },'#10'                { id: "ReadSeen", conditions: (module) => ('
  +'module.sendSeen) ? module : null },'#10'                { id: "sendDelete",'
  +' conditions: (module) => (module.sendDelete) ? module.sendDelete : null },'
  +#10'                { id: "addAndSendMsgToChat", conditions: (module) => (mo'
  +'dule.addAndSendMsgToChat) ? module.addAndSendMsgToChat : null },'#10'      '
  +'          { id: "sendMsgToChat", conditions: (module) => (module.sendMsgToC'
  +'hat) ? module.sendMsgToChat : null },'#10'                { id: "Catalog", '
  +'conditions: (module) => (module.Catalog) ? module.Catalog : null },'#10'   '
  +'             { id: "bp", conditions: (module) => (module.default&&module.de'
  +'fault.toString&&module.default.toString().includes(''bp_unknown_version''))'
  +' ? module.default : null },'#10'                { id: "MsgKey", conditions:'
  +' (module) => (module.default&&module.default.toString&&module.default.toStr'
  +'ing().includes(''MsgKey error: obj is null/undefined'')) ? module.default :'
  +' null },'#10'                { id: "Parser", conditions: (module) => (modul'
  +'e.convertToTextWithoutSpecialEmojis) ? module.default : null },'#10'       '
  +'         { id: "Builders", conditions: (module) => (module.TemplateMessage '
  +'&& module.HydratedFourRowTemplate) ? module : null },'#10'                {'
  +' id: "Me", conditions: (module) => (module.PLATFORMS && module.Conn) ? modu'
  +'le.default : null },'#10'                { id: "CallUtils", conditions: (mo'
  +'dule) => (module.sendCallEnd && module.parseCall) ? module : null },'#10'  '
  +'              { id: "Identity", conditions: (module) => (module.queryIdenti'
  +'ty && module.updateIdentity) ? module : null },'#10'                { id: "'
  +'MyStatus", conditions: (module) => (module.getStatus && module.setMyStatus)'
  +' ? module : null },                '#10#9#9#9#9'{ id: "ChatStates", conditi'
  +'ons: (module) => (module.sendChatStatePaused && module.sendChatStateRecordi'
  +'ng && module.sendChatStateComposing) ? module : null },'#9#9#9#9#10'       '
  +'         { id: "GroupActions", conditions: (module) => (module.sendExitGrou'
  +'p && module.localExitGroup) ? module : null },'#10'                { id: "F'
  +'eatures", conditions: (module) => (module.FEATURE_CHANGE_EVENT && module.fe'
  +'atures) ? module : null },'#10'                { id: "MessageUtils", condit'
  +'ions: (module) => (module.storeMessages && module.appendMessage) ? module :'
  +' null },'#10'                { id: "WebMessageInfo", conditions: (module) ='
  +'> (module.WebMessageInfo && module.WebFeatures) ? module.WebMessageInfo : n'
  +'ull },'#10'                { id: "createMessageKey", conditions: (module) ='
  +'> (module.createMessageKey && module.createDeviceSentMessage) ? module.crea'
  +'teMessageKey : null },'#10'                { id: "Participants", conditions'
  +': (module) => (module.addParticipants && module.removeParticipants && modul'
  +'e.promoteParticipants && module.demoteParticipants) ? module : null },'#10
  +'                { id: "WidFactory", conditions: (module) => (module.isWidli'
  +'ke && module.createWid && module.createWidFromWidLike) ? module : null },'
  +#10'                { id: "Base", conditions: (module) => (module.setSubProt'
  +'ocol && module.binSend && module.actionNode) ? module : null },'#10'   '#9#9
  +#9#9'{ id: "Versions", conditions: (module) => (module.loadProtoVersions && '
  +'module.default && module.default["15"] && module.default["16"] && module.de'
  +'fault["17"]) ? module : null },'#10#9#9'        { id: "Sticker", conditions'
  +': (module) => (module.default && module.default.Sticker) ? module.default.S'
  +'ticker : null },'#10'                { id: "MediaUpload", conditions: (modu'
  +'le) => (module.default && module.default.mediaUpload) ? module.default : nu'
  +'ll },'#10'                { id: "UploadUtils", conditions: (module) => (mod'
  +'ule.default && module.default.encryptAndUpload) ? module.default : null },'
  ,#10#9#9#9#9'{ id: ''UserPrefs'', conditions: (module) => (module.getMaybeMeU'
  +'ser ? module : null), },'#10'                { id: ''Vcard'', conditions: ('
  +'module) => (module.vcardFromContactModel ? module : null)}'#10'            '
  +'];'#10'            for (let idx in modules) {'#10'            '#9'if ((type'
  +'of modules[idx] === "object") && (modules[idx] !== null)) {'#10'           '
  +'         neededObjects.forEach((needObj) => {'#10'                    '#9'i'
  +'f (!needObj.conditions || needObj.foundedModule)'#10'                      '
  +'      return;'#10'                    '#9'let neededModule = needObj.condit'
  +'ions(modules[idx]);'#10'                    '#9'if (neededModule !== null) '
  +'{'#10'                            foundCount++;'#10'                       '
  +'     needObj.foundedModule = neededModule;'#10'                    '#9'}'#10
  +#9#9'    });'#10#10'                    if (foundCount == neededObjects.leng'
  +'th) {'#10'                    '#9'break;'#10'                    }'#10'    '
  +'        '#9'}'#10'            }'#10#9'    let neededStore = neededObjects.f'
  +'ind((needObj) => needObj.id === "Store");'#10'            window.Store = ne'
  +'ededStore.foundedModule ? neededStore.foundedModule : {};'#10'            n'
  +'eededObjects.splice(neededObjects.indexOf(neededStore), 1);'#10'           '
  +' neededObjects.forEach((needObj) => {'#10'                if (needObj.found'
  +'edModule) {'#10'                    window.Store[needObj.id] = needObj.foun'
  +'dedModule;'#10'                }'#10'            });'#10#9'    window.Store'
  +'.Chat.modelClass.prototype.sendMessage = function (e) {'#10#9#9'window.Stor'
  +'e.SendTextMsgToChat(this, ...arguments);'#10#9'    }'#10'            return'
  +' window.Store;'#10'    '#9'}'#10'        const parasite = `parasite${Date.n'
  +'ow()}`'#10#10'        if (typeof webpackJsonp === ''function'') webpackJson'
  +'p([], {[parasite]: (x, y, z) => getStore(z)}, [parasite]); '#10#9#9'else we'
  +'bpackChunkwhatsapp_web_client.push([[parasite], {}, function (o, e, t) {let'
  +' modules = []; for (let idx in o.m) {modules.push(o(idx));}'#9'getStore(mod'
  +'ules);}]);'#10'        '#10'    })();'#10'}'#10' '#10'window.WAPI = {};'#10
  +'window._WAPI = {};'#10#10'window.WAPI._serializeRawObj = (obj) => {'#10'   '
  +' if (obj && obj.toJSON) {'#10'        return obj.toJSON();'#10'    }'#10'  '
  +'  return {}'#10'};'#10#10'/**'#10' * Serializes a chat object'#10' *'#10' *'
  +' @param rawChat Chat object'#10' * @returns {{}}'#10' */'#10#10'window.WAPI'
  +'._serializeChatObj = (obj) => {'#10'    if (obj == undefined) {'#10'       '
  +' return null;'#10'    }'#10'    return Object.assign(window.WAPI._serialize'
  +'RawObj(obj), {'#10'        kind: obj.kind,'#10'        isGroup: obj.isGroup'
  +','#10'        formattedTitle: obj.formattedTitle,'#10'        contact: obj['
  +'''contact''] ? window.WAPI._serializeContactObj(obj[''contact'']) : null,'
  +#10'        groupMetadata: obj["groupMetadata"] ? window.WAPI._serializeRawO'
  +'bj(obj["groupMetadata"]) : null,'#10'        presence: obj["presence"] ? wi'
  +'ndow.WAPI._serializeRawObj(obj["presence"]) : null,'#10'        msgs: null'
  +#10'    });'#10'};'#10#10'window.WAPI._serializeContactObj = (obj) => {'#10
  +'    if (obj == undefined) {'#10'        return null;'#10'    }'#10#9#10#9'l'
  +'et profilePhoto = window.Store.ProfilePicThumb._index[obj.__x_id._serialize'
  +'d] ? window.Store.ProfilePicThumb._index[obj.__x_id._serialized].__x_imgFul'
  +'l : {}'#10#9#10'    return Object.assign(window.WAPI._serializeRawObj(obj),'
  +' {'#10#9#9'id: obj.id._serialized,'#10'        formattedName: obj.formatted'
  +'Name,'#10'        isHighLevelVerified: obj.isHighLevelVerified,'#10'       '
  +' isMe: obj.isMe,'#10'        isMyContact: obj.isMyContact,'#10'        isPS'
  +'A: obj.isPSA,'#10'        isUser: obj.isUser,'#10'        isVerified: obj.i'
  +'sVerified,'#10'        isWAContact: obj.isWAContact,'#10'        profilePic'
  +'Thumb: profilePhoto,'#10#9#9'statusMute: obj.statusMute,'#10'        msgs: '
  +'null'#10'    });'#10'};'#10#10'window.WAPI._serializeMessageObj = (obj) => '
  +'{'#10'    if (obj == undefined) {'#10'        return null;'#10'    }'#10'  '
  +'  const _chat = obj[''chat''] ? WAPI._serializeChatObj(obj[''chat'']) : {};'
  +#10'    if(obj.quotedMsg) obj.quotedMsgObj();'#10'    return Object.assign(w'
  +'indow.WAPI._serializeRawObj(obj), {'#10'        id: obj.id._serialized,'#10
  +'        //add 02/06/2020 mike -->'#10#9#9'quotedParticipant: obj.quotedPart'
  +'icipant? obj.quotedParticipant._serialized ? obj.quotedParticipant._seriali'
  +'zed : undefined : undefined,'#10'        author: obj.author? obj.author._se'
  +'rialized ? obj.author._serialized : undefined : undefined,'#10'        chat'
  +'Id: obj.chatId? obj.chatId._serialized ? obj.chatId._serialized : undefined'
  +' : undefined,'#10'        to: obj.to? obj.to._serialized ? obj.to._serializ'
  +'ed : undefined : undefined,'#10'        fromMe: obj.id.fromMe,'#10#9#9'//ad'
  +'d 02/06/2020 mike <--'#10#9#9#10#9#9'sender: obj["senderObj"] ? WAPI._seria'
  ,'lizeContactObj(obj["senderObj"]) : null,'#10'        timestamp: obj["t"],'
  +#10'        content: obj["body"],'#10'        isGroupMsg: obj.isGroupMsg,'#10
  +'        isLink: obj.isLink,'#10'        isMMS: obj.isMMS,'#10'        isMed'
  +'ia: obj.isMedia,'#10'        isNotification: obj.isNotification,'#10'      '
  +'  isPSA: obj.isPSA,'#10'        type: obj.type,'#10'        chat: _chat,'#10
  +'        isOnline: _chat.isOnline,'#10'        lastSeen: _chat.lastSeen,'#10
  +'        chatId: obj.id.remote,'#10'        quotedMsgObj: WAPI._serializeMes'
  +'sageObj(obj[''_quotedMsgObj'']),'#10'        mediaData: window.WAPI._serial'
  +'izeRawObj(obj[''mediaData'']),'#10'        reply: body => window.WAPI.reply'
  +'(_chat.id._serialized, body, obj)'#10'    });'#10'};'#10#10'window.WAPI._se'
  +'rializeNumberStatusObj = (obj) => {'#10'    if (obj == undefined) {'#10'   '
  +'     return null;'#10'    }'#10#10'    return Object.assign({}, {'#10'     '
  +'   id: obj.jid,'#10'        status: obj.status,'#10'        isBusiness: (ob'
  +'j.biz === true),'#10'        canReceiveMessage: (obj.status === 200)'#10'  '
  +'  });'#10'};'#10#10'window.WAPI._serializeProfilePicThumb = (obj) => {'#10
  +'    if (obj == undefined) {'#10'        return null;'#10'    }'#10#10'    r'
  +'eturn Object.assign({}, {'#10'        eurl: obj.eurl,'#10'        id: obj.i'
  +'d,'#10'        img: obj.img,'#10'        //imgFull: obj.imgFull,'#10#9#9'im'
  +'gFull: obj.__x_imgFull,'#10'        raw: obj.raw,'#10'        tag: obj.tag'
  +#10'    });'#10'}'#10#10'window.WAPI.createGroup = async function (name, con'
  +'tactsId) {'#10'    if (!Array.isArray(contactsId)) {'#10'        contactsId'
  +' = [contactsId];'#10'    }'#10#10'    return await window.Store.WapQuery.cr'
  +'eateGroup(name, contactsId);;'#10'};'#10#10'window.WAPI.leaveGroup = functi'
  +'on(groupId) {'#10'    groupId = typeof groupId == "string" ? groupId : grou'
  +'pId._serialized;'#10'    var group = WAPI.getChat(groupId);'#10'    return '
  +'Store.GroupActions.sendExitGroup(group)'#10'};'#10#10#10'window.WAPI.getAll'
  +'Contacts = function(done) {'#10'    const contacts = window.Store.Contact.m'
  +'ap((contact) => WAPI._serializeContactObj(contact));'#10#10'    if (done !='
  +'= undefined) done(contacts);'#10#10'    SetConsoleMessage("getAllContacts",'
  +' JSON.stringify(contacts));'#10#10'    return contacts;'#10'};'#10#10'/**'
  +#10' * Fetches all contact objects from store, filters them'#10' *'#10' * @p'
  +'aram done Optional callback function for async execution'#10' * @returns {A'
  +'rray|*} List of contacts'#10' */'#10'window.WAPI.getMyContacts = function(d'
  +'one) {'#10'    const contacts = window.Store.Contact.filter((contact) => co'
  +'ntact.isMyContact === true).map((contact) => WAPI._serializeContactObj(cont'
  +'act));'#10'    if (done !== undefined) done(contacts);'#10'    return conta'
  +'cts;'#10'};'#10#10'/**'#10' * Fetches contact object from store by ID'#10' '
  +'*'#10' * @param id ID of contact'#10' * @param done Optional callback funct'
  +'ion for async execution'#10' * @returns {T|*} Contact object'#10' */'#10'wi'
  +'ndow.WAPI.getContact = function(id, done) {'#10'    const found = window.St'
  +'ore.Contact.get(id);'#10#10'    if (done !== undefined) done(window.WAPI._s'
  +'erializeContactObj(found))'#10'    return window.WAPI._serializeContactObj('
  +'found);'#10'};'#10#10'/**'#10' * Fetches all chat objects from store'#10' *'
  +#10' * @param done Optional callback function for async execution'#10' * @re'
  +'turns {Array|*} List of chats'#10' */'#10'window.WAPI.getAllChats = functio'
  +'n(done) {'#10'    const chats = window.Store.Chat.map((chat) => WAPI._seria'
  +'lizeChatObj(chat));'#10#10'    if (done !== undefined) done(chats);'#10#10
  +'    SetConsoleMessage("getAllChats", JSON.stringify(chats));'#10#10'    ret'
  +'urn chats;'#10'};'#10#10'window.WAPI.haveNewMsg = function(chat) {'#10'    '
  +'return chat.unreadCount > 0;'#10'};'#10#10'window.WAPI.getAllChatsWithNewMs'
  +'g = function(done) {'#10'    const chats = window.Store.Chat.filter(window.'
  +'WAPI.haveNewMsg).map((chat) => WAPI._serializeChatObj(chat));'#10#10'    if'
  +' (done !== undefined) done(chats);'#10'    return chats;'#10'};'#10#10'/**'
  +#10' * Fetches all chat IDs from store'#10' *'#10' * @param done Optional ca'
  +'llback function for async execution'#10' * @returns {Array|*} List of chat '
  +'id''s'#10' */'#10'window.WAPI.getAllChatIds = function(done) {'#10'    cons'
  +'t chatIds = window.Store.Chat.map((chat) => chat.id._serialized || chat.id)'
  +';'#10#10'    if (done !== undefined) done(chatIds);'#10'    return chatIds;'
  +#10'};'#10#10'window.WAPI.getAllNewMessages = async function () {'#10'    re'
  +'turn JSON.stringify(WAPI.getAllChatsWithNewMsg().map(c => WAPI.getChat(c.id'
  +'._serialized)).map(c => c.msgs._models.filter(x => x.isNewMsg)) || [])'#10
  +'}'#10#10#10'/**'#10' * Fetches all groups objects from store'#10' *'#10' * '
  +'@param done Optional callback function for async execution'#10' * @returns '
  +'{Array|*} List of chats'#10' */'#10' '#10' '#10'window.WAPI.getAllGroups = '
  ,'function(done) {'#10'    let groups = window.Store.Chat.filter((chat) => ch'
  +'at.isGroup);'#10#10#9'if (done !== undefined) done(groups);'#10#9#10#10#9'l'
  +'et arrGroups = [];'#10#9'let arr = groups;'#10#9'arr.forEach((v , i) => {'
  +#10#9#9'arrGroups.push(arr[i][''id''][''_serialized'']+'' ''+arr[i][''format'
  +'tedTitle'']);'#10#9'})'#10#9#10#9'SetConsoleMessage("getAllGroups", JSON.st'
  +'ringify(arrGroups));'#10#9#10#9'//return groups;'#10'}; '#10#10'//01/06/202'
  +'0'#10'window.WAPI.getAllGroupsList = function(done) {'#10'    const contact'
  +'s = window.Store.Contact.map((contact) => WAPI._serializeContactObj(contact'
  +'));'#10#10'    if (done !== undefined) done(contacts);'#10#10'    SetConsol'
  +'eMessage("getAllGroups", JSON.stringify(contacts));'#10#10'    return conta'
  +'cts;'#10'};'#10#10'/**'#10' * Sets the chat state'#10' * '#10' * @param {0|'
  +'1|2} chatState The state you want to set for the chat. Can be TYPING (1), R'
  +'ECRDING (2) or PAUSED (3);'#10' * returns {boolean}'#10' */'#10'window.WAPI'
  +'.sendChatstate = async function (state, chatId) {'#10#10'   switch(state) {'
  +#10'        '#10#9#9#9'case 0:'#10#9#9#9#9#10#9#9#9#9#9'await window.Store.C'
  +'hatStates.sendChatStateComposing(chatId);'#10#9#9#9#9#9'break;'#10#10#9#9#9
  +'case 1:'#10#10#9#9#9#9#9'await window.Store.ChatStates.sendChatStateRecordi'
  +'ng(chatId);'#10#9#9#9#9#9'break;'#10#10#9#9#9'case 2:'#10#10#9#9#9#9#9'awai'
  +'t window.Store.ChatStates.sendChatStatePaused(chatId);'#10#9#9#9#9#9'break;'
  +#10#9#9#9#9#10#9#9#9'default:'#10#9#9#9#10#9#9#9#9'return false'#10#10'    }'
  +#10'    return true;'#10#10'};'#10#10'/**'#10' * Fetches chat object from st'
  +'ore by ID'#10' *'#10' * @param id ID of chat'#10' * @returns {T|*} Chat obj'
  +'ect'#10' */'#10'window.WAPI.getChat = function (id) {'#10'    id = typeof i'
  +'d == "string" ? id : id._serialized;'#10'    const found = window.Store.Cha'
  +'t.get(id);'#10'    if (found) found.sendMessage = (found.sendMessage) ? fou'
  +'nd.sendMessage : function () { return window.Store.sendMessage.apply(this, '
  +'arguments); };'#10'    return found;'#10'}'#10#10'window.WAPI.getChatByName'
  +' = function(name, done) {'#10'    const found = window.Store.FindChat.findC'
  +'hat((chat) => chat.name === name);'#10'    if (done !== undefined) done(fou'
  +'nd);'#10'    return found;'#10'};'#10#10'window.WAPI.sendImageFromDatabaseP'
  +'icBot = function (picId, chatId, caption) {'#10'    var chatDatabase = wind'
  +'ow.WAPI.getChatByName(''DATABASEPICBOT'');'#10'    var msgWithImg = chatDat'
  +'abase.msgs.find((msg) => msg.caption == picId);'#10#10'    if (msgWithImg ='
  +'== undefined) {'#10'        return false;'#10'    }'#10'    var chatSend = '
  +'WAPI.getChat(chatId);'#10'    if (chatSend === undefined) {'#10'        ret'
  +'urn false;'#10'    }'#10'    const oldCaption = msgWithImg.caption;'#10#10
  +'    msgWithImg.id.id = window.WAPI.getNewId();'#10'    msgWithImg.id.remote'
  +' = chatId;'#10'    msgWithImg.t = Math.ceil(new Date().getTime() / 1000);'
  +#10'    msgWithImg.to = chatId;'#10#10'    if (caption !== undefined && capt'
  +'ion !== '''') {'#10'        msgWithImg.caption = caption;'#10'    } else {'
  +#10'        msgWithImg.caption = '''';'#10'    }'#10#10'    msgWithImg.colle'
  +'ction.send(msgWithImg).then(function (e) {'#10'        msgWithImg.caption ='
  +' oldCaption;'#10'    });'#10#10'    return true;'#10'};'#10#10'window.WAPI.'
  +'getGeneratedUserAgent = function (useragent) {'#10'    if (!useragent.inclu'
  +'des(''WhatsApp'')) return ''WhatsApp/0.4.315 '' + useragent;'#10'    return'
  +' useragent.replace(useragent.match(/WhatsApp\/([.\d])*/g)[0].match(/[.\d]*/'
  +'g).find(x => x), window.Debug.VERSION)'#10'}'#10#10'window.WAPI.getWAVersio'
  +'n = function () {'#10'    return window.Debug.VERSION;'#10'}'#10#10'/**'#10
  +' * Automatically sends a link with the auto generated link preview. You can'
  +' also add a custom message to be added.'#10' * @param chatId '#10' * @param'
  +' url string A link, for example for youtube. e.g https://www.youtube.com/wa'
  +'tch?v=61O-Galzc5M'#10' * @param text string Custom text as body of the mess'
  +'age, this needs to include the link or it will be appended after the link.'
  +#10' */'#10'window.WAPI.sendLinkWithAutoPreview = async function (chatId, ur'
  +'l, text) { '#10'    var idUser = new window.Store.UserConstructor(chatId, {'
  +#10'        intentionallyUsePrivateConstructor: true'#10'    });'#10#10#10#9
  +'const fromwWid = await window.Store.Conn.wid;'#10#10#9'const linkPreview = '
  +' await Store.WapQuery.queryLinkPreview(url)'#10#10'    let queue = await St'
  +'ore.Contact.get(chatId);'#10'    const contact = await Store.FindChat.findC'
  +'hat(idUser)'#10'    const newChat = await Object.assign(queue, contact);'#10
  +#10'    '#10'    var newId = window.WAPI.getNewMessageId(chatId);'#10#10'   '
  +' var message =  {'#10#9#9'id: newId,'#10'        ack: 0,'#10'        body: '
  +'`${url}\n${text}`,'#10'        //from: fromwWid._serialized, //MD'#10#9#9'f'
  +'rom: fromwWid,'#10'        to: contact.id,'#10'        local: !0,'#10'     '
  ,'   self: ''out'','#10'        t: parseInt(new Date().getTime() / 1000),'#10
  +'        isNewMsg: !0,'#10'        type: ''chat'','#10'        subtype: ''ur'
  +'l'','#10'        canonicalUrl: linkPreview.canonicalUrl,'#10'        descri'
  +'ption: linkPreview.description,'#10'        doNotPlayInline: linkPreview.do'
  +'NotPlayInline,'#10'        matchedText: linkPreview.matchedText,'#10'      '
  +'  preview: linkPreview.preview,'#10'        thumbnail: linkPreview.thumbnai'
  +'l,'#10'        title: linkPreview.title'#10#9'};'#10#10'      return await '
  +'Promise.all(Store.addAndSendMsgToChat(newChat, message))'#10'}'#10#10'windo'
  +'w.WAPI.sendMessageWithThumb = function (thumb, url, title, description, tex'
  +'t, chatId) {'#10'    var chatSend = WAPI.getChat(chatId);'#10'    if (chatS'
  +'end === undefined) {'#10'        return false;'#10'    }'#10'    var linkPr'
  +'eview = {'#10'        canonicalUrl: url,'#10'        description: descripti'
  +'on,'#10'        matchedText: url,'#10'        title: title,'#10'        thu'
  +'mbnail: thumb // Thumbnail max size allowed: 200x200'#10'    };'#10'    cha'
  +'tSend.sendMessage(text.includes(url) ? text : `${url}\n${text}`, { linkPrev'
  +'iew: linkPreview, mentionedJidList: [], quotedMsg: null, quotedMsgAdminGrou'
  +'pJid: null });'#10'    return true;'#10'};'#10#10#10'window.WAPI.getNewId ='
  +' function() {'#10'    var text = "";'#10'    var possible = "ABCDEFGHIJKLMN'
  +'OPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";'#10#10'    for (var i = '
  +'0; i < 20; i++)'#10'        text += possible.charAt(Math.floor(Math.random('
  +') * possible.length));'#10'    return text;'#10'};'#10#10'window.WAPI.getCh'
  +'atById = function(id, done) {'#10'    let found = WAPI.getChat(id);'#10'   '
  +' if (found) {'#10'        found = WAPI._serializeChatObj(found);'#10'    } '
  +'else {'#10'        found = false;'#10'    }'#10#10'    if (done !== undefin'
  +'ed) done(found);'#10'    return found;'#10'};'#10#10'/**'#10' * Retorno tod'
  +'as as mensagens nao lidas de um bate-papo solicitado e as marca como lidas.'
  +#10' *'#10' * :param id: chat id'#10' * :type id: string'#10' *'#10' * :para'
  +'m includeMe: indicates if user messages have to be included'#10' * :type in'
  +'cludeMe: boolean'#10' *'#10' * :param includeNotifications: indicates if no'
  +'tifications have to be included'#10' * :type includeNotifications: boolean'
  +#10' *'#10' * :param done: callback passed by selenium'#10' * :type done: fu'
  +'nction'#10' *'#10' * :returns: list of unread messages from asked chat'#10
  +' * :rtype: object'#10' */'#10'window.WAPI.getUnreadMessagesInChat = functio'
  +'n(id, includeMe, includeNotifications, done) {'#10'    // get chat and its '
  +'messages'#10'    let chat = WAPI.getChat(id);'#10'    let messages = chat.m'
  +'sgs._models;'#10#10'    // initialize result list'#10'    let output = [];'
  +#10#10'    // look for unread messages, newest is at the end of array'#10'  '
  +'  for (let i = messages.length - 1; i >= 0; i--) {'#10'        // system me'
  +'ssage: skip it'#10'        if (i === "remove") {'#10'            continue;'
  +#10'        }'#10#10'        // get message'#10'        let messageObj = mes'
  +'sages[i];'#10#10'        // found a read message: stop looking for others'
  +#10'        if (typeof(messageObj.isNewMsg) !== "boolean" || messageObj.isNe'
  +'wMsg === false) {'#10'            continue;'#10'        } else {'#10'      '
  +'      messageObj.isNewMsg = false;'#10'            // process it'#10'      '
  +'      let message = WAPI.processMessageObj(messageObj,'#10'                '
  +'includeMe,'#10'                includeNotifications);'#10#10'            //'
  +' save processed message on result list'#10'            if (message)'#10'   '
  +'             output.push(message);'#10'        }'#10'    }'#10'    // callb'
  +'ack was passed: run it'#10'    if (done !== undefined) done(output);'#10'  '
  +'  // return result list'#10'    return output;'#10'};'#10#10'/**'#10' * Loa'
  +'d more messages in chat object from store by ID'#10' *'#10' * @param id ID '
  +'of chat'#10' * @param done Optional callback function for async execution'
  +#10' * @returns None'#10' */'#10'window.WAPI.loadEarlierMessages = function('
  +'id, done) {'#10'    const found = WAPI.getChat(id);'#10'    if (done !== un'
  +'defined) {'#10'        found.loadEarlierMsgs().then(function() {'#10'      '
  +'      done()'#10'        });'#10'    } else {'#10'        found.loadEarlier'
  +'Msgs();'#10'    }'#10'};'#10#10'/**'#10' * Load more messages in chat objec'
  +'t from store by ID'#10' *'#10' * @param id ID of chat'#10' * @param done Op'
  +'tional callback function for async execution'#10' * @returns None'#10' */'
  +#10'window.WAPI.loadAllEarlierMessages = function(id, done) {'#10'    const '
  +'found = WAPI.getChat(id);'#10'    x = function() {'#10'        if (!found.m'
  +'sgs.msgLoadState.noEarlierMsgs) {'#10'            found.loadEarlierMsgs().t'
  +'hen(x);'#10'        } else if (done) {'#10'            done();'#10'        '
  +'}'#10'    };'#10'    x();'#10'};'#10#10'window.WAPI.asyncLoadAllEarlierMess'
  ,'ages = function(id, done) {'#10'    done();'#10'    window.WAPI.loadAllEarl'
  +'ierMessages(id);'#10'};'#10#10'window.WAPI.areAllMessagesLoaded = function('
  +'id, done) {'#10'    const found = WAPI.getChat(id);'#10'    if (!found.msgs'
  +'.msgLoadState.noEarlierMsgs) {'#10'        if (done) done(false);'#10'     '
  +'   return false'#10'    }'#10'    if (done) done(true);'#10'    return true'
  +#10'};'#10#10'/**'#10' * Load more messages in chat object from store by ID '
  +'till a particular date'#10' *'#10' * @param id ID of chat'#10' * @param las'
  +'tMessage UTC timestamp of last message to be loaded'#10' * @param done Opti'
  +'onal callback function for async execution'#10' * @returns None'#10' */'#10
  +#10'window.WAPI.loadEarlierMessagesTillDate = function(id, lastMessage, done'
  +') {'#10'    const found = WAPI.getChat(id);'#10'    x = function() {'#10'  '
  +'      if (found.msgs.models[0].t > lastMessage) {'#10'            found.loa'
  +'dEarlierMsgs().then(x);'#10'        } else {'#10'            done();'#10'  '
  +'      }'#10'    };'#10'    x();'#10'};'#10#10'/**'#10' * Fetches all group '
  +'metadata objects from store'#10' *'#10' * @param done Optional callback fun'
  +'ction for async execution'#10' * @returns {Array|*} List of group metadata'
  +#10' */'#10'window.WAPI.getAllGroupMetadata = function(done) {'#10'    const'
  +' groupData = window.Store.GroupMetadata.map((groupData) => groupData.all);'
  +#10#10'    if (done !== undefined) done(groupData);'#10'    return groupData'
  +';'#10'};'#10#10'/**'#10' * Fetches group metadata object from store by ID'
  +#10' *'#10' * @param id ID of group'#10' * @param done Optional callback fun'
  +'ction for async execution'#10' * @returns {T|*} Group metadata object'#10' '
  +'*/'#10' '#10'/* Deprecated 02/06/2020'#10'window.WAPI.getGroupMetadata = as'
  +'ync function(id, done) {'#10'    let output = window.Store.GroupMetadata.ge'
  +'t(id);'#10#10'    if (output !== undefined) {'#10'        if (output.stale)'
  +' {'#10'            await output.update();'#10'        }'#10'    }'#10#10'  '
  +'  if (done !== undefined) done(output);'#10'    return output;'#10#10'}; */'
  +#10#10'window.WAPI.getGroupMetadata = async function (id) {'#10'    return w'
  +'indow.Store.GroupMetadata.find(id);'#10'};'#10#10'/**'#10' * Fetches group '
  +'participants'#10' *'#10' * @param id ID of group'#10' * @returns {Promise.<'
  +'*>} Yields group metadata'#10' * @private'#10' */'#10'window.WAPI._getGroup'
  +'Participants = async function(id) {'#10'    const metadata = await WAPI.get'
  +'GroupMetadata(id);'#10'    return metadata.participants;'#10'};'#10#10'/**'
  +#10' * Fetches IDs of group participants'#10' *'#10' * @param id ID of group'
  +#10' * @param done Optional callback function for async execution'#10' * @re'
  +'turns {Promise.<Array|*>} Yields list of IDs'#10' */'#10#10'/*'#10'window.W'
  +'API.getGroupParticipantIDs = async function (id) {'#10'    return (await WA'
  +'PI._getGroupParticipants(id))'#10'        .map((participant) => participant'
  +'.id);'#10'}; */'#10#10#10'window.WAPI.getGroupParticipantIDs = async functi'
  +'on(id, done) {'#10'    const output = (await WAPI._getGroupParticipants(id)'
  +')'#10'        .map((participant) => participant.id);'#10#10'    if (done !='
  +'= undefined) done(output);'#10#9'getAllGroupContacts(JSON.stringify(output)'
  +');'#10#9#9'   '#10#9'return output;'#10'};'#10#10'window.WAPI.getGroupAdmin'
  +'s = async function(id, done) {'#10'    const output = (await WAPI._getGroup'
  +'Participants(id))'#10'        .filter((participant) => participant.isAdmin)'
  +#10'        .map((admin) => admin.id);'#10#10'    if (done !== undefined) do'
  +'ne(output);'#10#9'let arrGroupAdm = [];'#10#9'let arr = output;'#10#9'arr.f'
  +'orEach((v , i) => {'#10#9#9'arrGroupAdm.push(arr[i][''_serialized'']);'#10#9
  +'})'#10#9'SetConsoleMessage("getAllGroupAdmins", JSON.stringify(arrGroupAdm)'
  +');'#10#9#10'    return output;'#10'};'#10#10'/**'#10' * Gets object represe'
  +'nting the logged in user'#10' *'#10' * @returns {Array|*|$q.all}'#10' */'#10
  +'window.WAPI.getMe = function(done) {'#10'    const rawMe = window.Store.Con'
  +'tact.get(window.Store.Conn.me);'#10#10'    if (done !== undefined) done(raw'
  +'Me.all);'#10'    return rawMe.all;'#10'};'#10#10'window.WAPI.isLoggedIn = f'
  +'unction(done) {'#10'    // Contact always exists when logged in'#10'    con'
  +'st isLogged = window.Store.Contact && window.Store.Contact.checksum !== und'
  +'efined;'#10#10'    if (done !== undefined) done(isLogged);'#10'    return i'
  +'sLogged;'#10'};'#10#10'//Funcao para saber o status do servico - Mike 26/02'
  +'/2020'#10'window.WAPI.isConnected = function (done) {'#10'    const isConne'
  +'cted = document.querySelector(''*[data-icon="alert-phone"]'') !== null ? fa'
  +'lse : true;'#10#10'    if (done !== undefined) done(isConnected);'#10#9'Set'
  +'ConsoleMessage("GetCheckIsConnected", JSON.stringify(isConnected));'#10'   '
  +' return isConnected;'#10'};'#10#10'window.WAPI.teste = function (url) {'#10
  +#9'var lUrl = window.Store.ProfilePicThumb._index[url].__x_imgFull;'#10#9'co'
  ,'nvertImgToBase64URL(lUrl, function(base64Img){'#10#9#9'SetConsoleMessage("G'
  +'etProfilePicThumb", JSON.stringify(base64Img));'#10#9'});'#10'};'#10#10#10
  +'window.WAPI.getProfilePicFromServer = function (id) {'#10#9'return Store.Wa'
  +'pQuery.profilePicFind(id).then(x => console.log(x.eurl));'#10'}'#10#10'wind'
  +'ow.WAPI.getProfilePicSmallFromId = async function (id) {'#10'    return awa'
  +'it window.Store.ProfilePicThumb.find(id).then(async d=> {'#10'        if (d'
  +'.img !== undefined) {'#10'            return await window.WAPI.downloadFile'
  +'WithCredentials(d.img);'#10'        } else {'#10'            return false'
  +#10'        }'#10'    }, function (e) {'#10'        return false'#10'    })'
  +#10'};'#10#10#10'window.WAPI.processMessageObj = function(messageObj, includ'
  +'eMe, includeNotifications) {'#10'    if (messageObj.isNotification) {'#10' '
  +'       if (includeNotifications)'#10'            return WAPI._serializeMess'
  +'ageObj(messageObj);'#10'        else'#10'            return;'#10'        //'
  +' System message'#10'        // (i.e. "Messages you send to this chat and ca'
  +'lls are now secured with end-to-end encryption...")'#10'    } else if (mess'
  +'ageObj.id.fromMe === false || includeMe) {'#10'        return WAPI._seriali'
  +'zeMessageObj(messageObj);'#10'    }'#10#10'    SetConsoleMessage("processMe'
  +'ssageObj", JSON.stringify(messageObj));'#10'    return;'#10'};'#10#10'windo'
  +'w.WAPI.getAllMessagesInChat = function(id, includeMe, includeNotifications,'
  +' done) {'#10'    const chat = WAPI.getChat(id);'#10'    let output = [];'#10
  +'    const messages = chat.msgs._models;'#10#10'    for (const i in messages'
  +') {'#10'        if (i === "remove") {'#10'            continue;'#10'       '
  +' }'#10'        const messageObj = messages[i];'#10#10'        //Miro Emidio'
  +' - 05/Dez/2019 Alterado para funcionamento em WHATS empresarial/pessoal'#10
  +'        let message = WAPI.processMessageObj(messageObj, includeMe, false) '
  +'//includeNotifications'#10'        if (message)'#10'            output.push'
  +'(message);'#10'    }'#10'    if (done !== undefined) done(output);'#10'    '
  +'return output;'#10'};'#10#10'window.WAPI.getAllMessageIdsInChat = function('
  +'id, includeMe, includeNotifications, done) {'#10'    const chat = WAPI.getC'
  +'hat(id);'#10'    let output = [];'#10'    const messages = chat.msgs._model'
  +'s;'#10#10'    for (const i in messages) {'#10'        if ((i === "remove") '
  +'|| (!includeMe && messages[i].isMe) || (!includeNotifications && messages[i'
  +'].isNotification)) {'#10'            continue;'#10'        }'#10'        ou'
  +'tput.push(messages[i].id._serialized);'#10'    }'#10'    if (done !== undef'
  +'ined) done(output);'#10'    return output;'#10'};'#10#10'window.WAPI.getMes'
  +'sageById = function(id, done) {'#10'    let result = false;'#10'    try {'
  +#10'        let msg = window.Store.Msg.get(id);'#10'        if (msg) {'#10' '
  +'           result = WAPI.processMessageObj(msg, true, true);'#10'        }'
  +#10'    } catch (err) {}'#10#10'    if (done !== undefined) {'#10'        do'
  +'ne(result);'#10'    } else {'#10'        return result;'#10'    }'#10'};'#10
  +#10'window.WAPI.ReplyMessage = function(idMessage, message, done) {'#10'    '
  +'var messageObject = window.Store.Msg.get(idMessage);'#10'    if (messageObj'
  +'ect === undefined) {'#10'        if (done !== undefined) done(false);'#10' '
  +'       return false;'#10'    }'#10'    messageObject = messageObject.value('
  +');'#10#10'    const chat = WAPI.getChat(messageObject.chat.id)'#10'    if ('
  +'chat !== undefined) {'#10'        if (done !== undefined) {'#10'           '
  +' chat.sendMessage(message, null, messageObject).then(function() {'#10'     '
  +'           function sleep(ms) {'#10'                    return new Promise('
  +'resolve => setTimeout(resolve, ms));'#10'                }'#10#10'         '
  +'       var trials = 0;'#10#10'                function check() {'#10'      '
  +'              for (let i = chat.msgs.models.length - 1; i >= 0; i--) {'#10
  +'                        let msg = chat.msgs.models[i];'#10#10'             '
  +'           if (!msg.senderObj.isMe || msg.body != message) {'#10'          '
  +'                  continue;'#10'                        }'#10'             '
  +'           done(WAPI._serializeMessageObj(msg));'#10'                      '
  +'  return True;'#10'                    }'#10'                    trials += '
  +'1;'#10'                    console.log(trials);'#10'                    if '
  +'(trials > 30) {'#10'                        done(true);'#10'               '
  +'         return;'#10'                    }'#10'                    sleep(50'
  +'0).then(check);'#10'                }'#10'                check();'#10'    '
  +'        });'#10'            return true;'#10'        } else {'#10'         '
  +'   chat.sendMessage(message, null, messageObject);'#10'            return t'
  +'rue;'#10'        }'#10'    } else {'#10'        if (done !== undefined) don'
  +'e(false);'#10'        return false;'#10'    }'#10'};'#10#10'//Funcao desati'
  ,'vada em 27/11/2019 by Mike'#10'/*window.WAPI.sendMessageToID = function (id'
  +', message, done) {'#10'try {'#10'window.getContact = (id) => {'#10'return S'
  +'tore.WapQuery.queryExist(id);'#10'}'#10'window.getContact(id).then(contact '
  +'=> {'#10'if (contact.status === 404) {'#10'done(true);'#10'} else {'#10'Sto'
  +'re.FindChat.findChat(contact.jid).then(chat => {'#10'chat.sendMessage(messa'
  +'ge);'#10'return true;'#10'}).catch(reject => {'#10'if (WAPI.sendMessage(id,'
  +' message)) {'#10'done(true);'#10'return true;'#10'}else{'#10'done(false);'
  +#10'return false;'#10'}'#10'});'#10'}'#10'});'#10'} catch (e) {'#10'if (wind'
  +'ow.Store.Chat.length === 0)'#10'return false;'#10#10'firstChat = Store.Chat'
  +'.models[0];'#10'var originalID = firstChat.id;'#10'firstChat.id = typeof or'
  +'iginalID === "string" ? id : new window.Store.UserConstructor(id, { intenti'
  +'onallyUsePrivateConstructor: true });'#10'if (done !== undefined) {'#10'fir'
  +'stChat.sendMessage(message).then(function () {'#10'firstChat.id = originalI'
  +'D;'#10'done(true);'#10'});'#10'return true;'#10'} else {'#10'firstChat.send'
  +'Message(message);'#10'firstChat.id = originalID;'#10'return true;'#10'}'#10
  +'}'#10'if (done !== undefined) done(false);'#10'return false;'#10'} */'#10#10
  +'window.WAPI.sendMessage = function(id, message, done) {'#10'    var chat = '
  +'WAPI.getChat(id);'#10'    if (chat !== undefined) {'#10'        if (done !='
  +'= undefined) {'#10'            chat.sendMessage(message).then(function() {'
  +#10'                function sleep(ms) {'#10'                    return new '
  +'Promise(resolve => setTimeout(resolve, ms));'#10'                }'#10#10' '
  +'               var trials = 0;'#10#10'                function check() {'#10
  +'                    for (let i = chat.msgs.models.length - 1; i >= 0; i--) '
  +'{'#10'                        let msg = chat.msgs.models[i];'#10#10'       '
  +'                 if (!msg.senderObj.isMe || msg.body != message) {'#10'    '
  +'                        continue;'#10'                        }'#10'       '
  +'                 done(WAPI._serializeMessageObj(msg));'#10'                '
  +'        return True;'#10'                    }'#10'                    tria'
  +'ls += 1;'#10'                    console.log(trials);'#10'                 '
  +'   if (trials > 30) {'#10'                        done(true);'#10'         '
  +'               return;'#10'                    }'#10'                    sl'
  +'eep(500).then(check);'#10'                }'#10'                check();'#10
  +'            });'#10'            return true;'#10'        } else {'#10'     '
  +'       chat.sendMessage(message);'#10'            return true;'#10'        '
  +'}'#10'    } else {'#10'        if (done !== undefined) done(false);'#10'   '
  +'     return false;'#10'    }'#10'};'#10#10'window.WAPI.sendMessage2 = funct'
  +'ion(id, message, done) {'#10'    var chat = WAPI.getChat(id);'#10'    if (c'
  +'hat !== undefined) {'#10'        try {'#10'            if (done !== undefin'
  +'ed) {'#10'                chat.sendMessage(message).then(function() {'#10' '
  +'                   done(true);'#10'                });'#10'            } el'
  +'se {'#10'                chat.sendMessage(message);'#10'            }'#10' '
  +'           return true;'#10'        } catch (error) {'#10'            if (d'
  +'one !== undefined) done(false)'#10'            return false;'#10'        }'
  +#10'    }'#10'    if (done !== undefined) done(false)'#10'    return false;'
  +#10'};'#10#10'//Funcao adicionada em 18/06/2020 by Mike'#10'window.WAPI.send'
  +'Seen = async function (id) {'#10'    if (!id) return false;'#10'    var cha'
  +'t = window.WAPI.getChat(id);'#10'    if (chat !== undefined) {'#10'        '
  +'    await Store.ReadSeen.sendSeen(chat, false);'#10'            return true'
  +';'#10'    }'#10'    return false;'#10'};'#10#10'/*'#10'//Apos receber uma m'
  +'ensagem, e nao responder, essa funcao nao funciona de forma isolada'#10'win'
  +'dow.WAPI.sendSeen = function(id, done) {'#10'    var chat = window.WAPI.get'
  +'Chat(id);'#10'    if (chat !== undefined) {'#10'        if (done !== undefi'
  +'ned) {'#10'            Store.SendSeen(Store.Chat.models[0], false).then(fun'
  +'ction() {'#10'                done(true);'#10'            });'#10'         '
  +'   return true;'#10'        } else {'#10'            Store.SendSeen(Store.C'
  +'hat.models[0], false);'#10'            return true;'#10'        }'#10'    }'
  +#10'    if (done !== undefined) done();'#10'    return false;'#10'}; */'#10
  +#10'/*'#10'//Alterado em 20/02/2020 Creditos: by Lucas'#10'//Apos receber um'
  +'a mensagem, e nao responder, essa funcao funciona de forma isolada'#10'wind'
  +'ow.WAPI.sendSeen = function(id, done) {'#10'    var chat = window.WAPI.getC'
  +'hat(id);'#10'    if (chat !== undefined) {'#10'        if (done !== undefin'
  +'ed) {'#10'            Store.SendSeen(Store.Chat.models[0], false).then(func'
  +'tion() {'#10'                done(true);'#10'            });'#10'          '
  +'  return true;'#10'        } else {'#10'            Store.SendSeen(Store.Ch'
  ,'at.models[0], false);'#10'            return true;'#10'        }'#10'    }'
  +#10'    if (done !== undefined) done();'#10'    return false;'#10'}; */'#10
  +#10'function isChatMessage(message) {'#10'    if (message.isSentByMe) {'#10
  +'        return false;'#10'    }'#10'    if (message.isNotification) {'#10' '
  +'       return false;'#10'    }'#10'    if (!message.isUserCreatedType) {'#10
  +'        return false;'#10'    }'#10'    return true;'#10'}'#10#10'window.WA'
  +'PI.getUnreadMessages = function(includeMe, includeNotifications, use_unread'
  +'_count, done) {'#10'    const chats = window.Store.Chat.models;'#10'    let'
  +' output = [];'#10#10'    for (let chat in chats) {'#10'        if (isNaN(ch'
  +'at)) {'#10'            continue;'#10'        }'#10#10'        let messageGr'
  +'oupObj = chats[chat];'#10'        let messageGroup = WAPI._serializeChatObj'
  +'(messageGroupObj);'#10#10'        messageGroup.messages = [];'#10#10'      '
  +'  const messages = messageGroupObj.msgs._models;'#10'        for (let i = m'
  +'essages.length - 1; i >= 0; i--) {'#10'            let messageObj = message'
  +'s[i];'#10'            if (typeof(messageObj.isNewMsg) != "boolean" || messa'
  +'geObj.isNewMsg === false) {'#10'                continue;'#10'            }'
  +' else {'#10'                messageObj.isNewMsg = false;'#10'              '
  +'  //Miro Emidio - 05/Dez/2019 Alterado para funcionamento em WHATS empresar'
  +'ial/pessoal'#10'                let message = WAPI.processMessageObj(messag'
  +'eObj, includeMe, false); //includeNotifications);// MUDAR PARA "FALSE" AQUI'
  +#10'                if (message) {'#10'                    messageGroup.mess'
  +'ages.push(message);'#10'                }'#10'            }'#10'        }'
  +#10#10'        if (messageGroup.messages.length > 0) {'#10'            outpu'
  +'t.push(messageGroup);'#10'        } else { // no messages with isNewMsg tru'
  +'e'#10'            if (use_unread_count) {'#10'                let n = messa'
  +'geGroupObj.unreadCount; // usara o atributo unreadCount para buscar as ulti'
  +'mas n mensagens do remetente'#10'                for (let i = messages.leng'
  +'th - 1; i >= 0; i--) {'#10'                    let messageObj = messages[i]'
  +';'#10'                    if (n > 0) {'#10'                        if (!mes'
  +'sageObj.isSentByMe) {'#10'                            let message = WAPI.pr'
  +'ocessMessageObj(messageObj, includeMe, includeNotifications);'#10'         '
  +'                   messageGroup.messages.unshift(message);'#10'            '
  +'                n -= 1;'#10'                        }'#10'                 '
  +'   } else if (n === -1) { // chat was marked as unread so will fetch last m'
  +'essage as unread'#10'                        if (!messageObj.isSentByMe) {'
  +#10'                            let message = WAPI.processMessageObj(message'
  +'Obj, includeMe, includeNotifications);'#10'                            mess'
  +'ageGroup.messages.unshift(message);'#10'                            break;'
  +#10'                        }'#10'                    } else { // unreadCoun'
  +'t = 0'#10'                        break;'#10'                    }'#10'    '
  +'            }'#10'                if (messageGroup.messages.length > 0) {'
  +#10'                    messageGroupObj.unreadCount = 0; // reset unread cou'
  +'nter'#10'                    output.push(messageGroup);'#10'               '
  +' }'#10'            }'#10'        }'#10'    }'#10'    if (done !== undefined'
  +') {'#10'        done(output);'#10#10'    }'#10#9#10#9'//mike teste 16/02/20'
  +'21 tentativa de retornar imagem de perfil'#10'    SetConsoleMessage("getUnr'
  +'eadMessages", JSON.stringify(output));'#10'    return output;'#10'};'#10#10
  +'window.WAPI.getGroupOwnerID = async function(id, done) {'#10'    const outp'
  +'ut = (await WAPI.getGroupMetadata(id)).owner.id;'#10'    if (done !== undef'
  +'ined) {'#10'        done(output);'#10'    }'#10#10'    SetConsoleMessage("g'
  +'etGroupOwnerID", JSON.stringify(output));'#10#10'    return output;'#10#10
  +'};'#10#10'window.WAPI.getCommonGroups = async function(id, done) {'#10'    '
  +'let output = [];'#10#10'    groups = window.WAPI.getAllGroups();'#10#10'   '
  +' for (let idx in groups) {'#10'        try {'#10'            participants ='
  +' await window.WAPI.getGroupParticipantIDs(groups[idx].id);'#10'            '
  +'if (participants.filter((participant) => participant == id).length) {'#10' '
  +'               output.push(groups[idx]);'#10'            }'#10'        } ca'
  +'tch (err) {'#10'            console.log("Error in group:");'#10'           '
  +' console.log(groups[idx]);'#10'            console.log(err);'#10'        }'
  +#10'    }'#10#10'    if (done !== undefined) {'#10'        done(output);'#10
  +'    }'#10'    return output;'#10'};'#10#10'window.WAPI.getProfilePicSmallFr'
  +'omId = function(id, done) {'#10'    window.Store.ProfilePicThumb.find(id).t'
  +'hen(function(d) {'#10'        if (d.img !== undefined) {'#10'            wi'
  +'ndow.WAPI.downloadFileWithCredentials(d.img, done);'#10'        } else {'#10
  ,'            done(false);'#10'        }'#10'    }, function(e) {'#10'       '
  +' done(false);'#10'    })'#10'};'#10#10'window.WAPI.getProfilePicFromId = fu'
  +'nction(id, done) {'#10'    window.Store.ProfilePicThumb.find(id).then(funct'
  +'ion(d) {'#10'        if (d.imgFull !== undefined) {'#10'            window.'
  +'WAPI.downloadFileWithCredentials(d.imgFull, done);'#10'        } else {'#10
  +'            done(false);'#10'        }'#10'    }, function(e) {'#10'       '
  +' done(false);'#10'    })'#10'};'#10#10'window.WAPI.downloadFileWithCredenti'
  +'als = function(url, done) {'#10'    let xhr = new XMLHttpRequest();'#10#10
  +'    xhr.onload = function() {'#10'        if (xhr.readyState == 4) {'#10'  '
  +'          if (xhr.status == 200) {'#10'                let reader = new Fil'
  +'eReader();'#10'                reader.readAsDataURL(xhr.response);'#10'    '
  +'            reader.onload = function(e) {'#10'                    done(read'
  +'er.result.substr(reader.result.indexOf('','') + 1))'#10'                };'
  +#10'            } else {'#10'                console.error(xhr.statusText);'
  +#10'            }'#10'        } else {'#10'            console.log(err);'#10
  +'            done(false);'#10'        }'#10'    };'#10#10'    xhr.open("GET"'
  +', url, true);'#10'    xhr.withCredentials = true;'#10'    xhr.responseType '
  +'= ''blob'';'#10'    xhr.send(null);'#10'};'#10#10'window.WAPI.downloadFile '
  +'= function(url, done) {'#10'    let xhr = new XMLHttpRequest();'#10#10'    '
  +'xhr.onload = function() {'#10'        if (xhr.readyState == 4) {'#10'      '
  +'      if (xhr.status == 200) {'#10'                let reader = new FileRea'
  +'der();'#10'                reader.readAsDataURL(xhr.response);'#10'        '
  +'        reader.onload = function(e) {'#10'                    done(reader.r'
  +'esult.substr(reader.result.indexOf('','') + 1))'#10'                };'#10
  +'            } else {'#10'                console.error(xhr.statusText);'#10
  +'            }'#10'        } else {'#10'            console.log(err);'#10'  '
  +'          done(false);'#10'        }'#10'    };'#10#10'    xhr.open("GET", '
  +'url, true);'#10'    xhr.responseType = ''blob'';'#10'    xhr.send(null);'#10
  +'};'#10#10'window.WAPI.getBatteryLevel = function(done) {'#10'    if (window'
  +'.Store.Conn.plugged) {'#10'        if (done !== undefined) {'#10'          '
  +'  done(100);'#10'        }'#10'        output = 100;'#10'        return Set'
  +'ConsoleMessage("getBatteryLevel", JSON.stringify(output));'#10'    }'#10'  '
  +'  output = window.Store.Conn.battery;'#10'    if (done !== undefined) {'#10
  +'        done(output);'#10'    }'#10'    SetConsoleMessage("getBatteryLevel"'
  +', JSON.stringify(output));'#10'    return output;'#10'};'#10#10'window.WAPI'
  +'.deleteConversation = async function (chatId) {'#10'    let userId = new wi'
  +'ndow.Store.UserConstructor(chatId, { intentionallyUsePrivateConstructor: tr'
  +'ue });'#10'    let conversation = WAPI.getChat(userId);'#10'    if (!conver'
  +'sation) {'#10'        return false;'#10'    }'#10'    return await window.S'
  +'tore.sendDelete(conversation, false).then(() => {'#10'        return true;'
  +#10'    }).catch(() => {'#10'        return false;'#10'    });'#10'};'#10#10
  +'window.WAPI.deleteMessage = function(chatId, messageArray, revoke = false, '
  +'done) {'#10'    let userId = new window.Store.UserConstructor(chatId, {'#10
  +'        intentionallyUsePrivateConstructor: true'#10'    });'#10'    let co'
  +'nversation = WAPI.getChat(userId);'#10#10'    if (!conversation) {'#10'    '
  +'    if (done !== undefined) {'#10'            done(false);'#10'        }'#10
  +'        return false;'#10'    }'#10#10'    if (!Array.isArray(messageArray)'
  +') {'#10'        messageArray = [messageArray];'#10'    }'#10#10'    if (rev'
  +'oke) {'#10'        conversation.sendRevokeMsgs(messageArray, conversation);'
  +#10'    } else {'#10'        conversation.sendDeleteMsgs(messageArray, conve'
  +'rsation);'#10'    }'#10#10'    if (done !== undefined) {'#10'        done(t'
  +'rue);'#10'    }'#10#10'    return true;'#10'};'#10#10'window.WAPI.checkNumb'
  +'erStatus = function(id, done) {'#10'    window.Store.WapQuery.queryExist(id'
  +').then((result) => {'#10'        if (done !== undefined) {'#10'            '
  +'if (result.jid === undefined) throw 404;'#10'            done(window.WAPI._'
  +'serializeNumberStatusObj(result));'#10'        }'#10'    }).catch((e) => {'
  +#10'        if (done !== undefined) {'#10'            done(window.WAPI._seri'
  +'alizeNumberStatusObj({'#10'                status: e,'#10'                j'
  +'id: id'#10'            }));'#10'        }'#10'    });'#10#10'    return tru'
  +'e;'#10'};'#10#10'/**'#10' * New messages observable functions.'#10' */'#10
  +'window.WAPI._newMessagesQueue = [];'#10'window.WAPI._newMessagesBuffer = (s'
  +'essionStorage.getItem(''saved_msgs'') != null) ? JSON.parse(sessionStorage.'
  +'getItem(''saved_msgs'')) : [];'#10'window.WAPI._newMessagesDebouncer = null'
  +';'#10'window.WAPI._newMessagesCallbacks = [];'#10#10'window.Store.Msg.off('
  ,'''add'');'#10'sessionStorage.removeItem(''saved_msgs'');'#10#10'window.WAPI'
  +'._newMessagesListener = window.Store.Msg.on(''add'', (newMessage) => {'#10
  +'    if (newMessage && newMessage.isNewMsg && !newMessage.isSentByMe) {'#10
  +'        let message = window.WAPI.processMessageObj(newMessage, false, fals'
  +'e);'#10'        if (message) {'#10'            window.WAPI._newMessagesQueu'
  +'e.push(message);'#10'            window.WAPI._newMessagesBuffer.push(messag'
  +'e);'#10'        }'#10#10'        // Starts debouncer time to don t call a c'
  +'allback for each message if more than one message arrives'#10'        // in'
  +' the same second'#10'        if (!window.WAPI._newMessagesDebouncer && wind'
  +'ow.WAPI._newMessagesQueue.length > 0) {'#10'            window.WAPI._newMes'
  +'sagesDebouncer = setTimeout(() => {'#10'                let queuedMessages '
  +'= window.WAPI._newMessagesQueue;'#10#10'                window.WAPI._newMes'
  +'sagesDebouncer = null;'#10'                window.WAPI._newMessagesQueue = '
  +'[];'#10#10'                let removeCallbacks = [];'#10#10'               '
  +' window.WAPI._newMessagesCallbacks.forEach(function(callbackObj) {'#10'    '
  +'                if (callbackObj.callback !== undefined) {'#10'             '
  +'           callbackObj.callback(queuedMessages);'#10'                    }'
  +#10'                    if (callbackObj.rmAfterUse === true) {'#10'         '
  +'               removeCallbacks.push(callbackObj);'#10'                    }'
  +#10'                });'#10#10'                // Remove removable callbacks'
  +'.'#10'                removeCallbacks.forEach(function(rmCallbackObj) {'#10
  +'                    let callbackIndex = window.WAPI._newMessagesCallbacks.i'
  +'ndexOf(rmCallbackObj);'#10'                    window.WAPI._newMessagesCall'
  +'backs.splice(callbackIndex, 1);'#10'                });'#10'            }, '
  +'1000);'#10'        }'#10'    }'#10'});'#10#10'window.WAPI._unloadInform = ('
  +'event) => {'#10'    // Save in the buffer the ungot unreaded messages'#10' '
  +'   window.WAPI._newMessagesBuffer.forEach((message) => {'#10'        Object'
  +'.keys(message).forEach(key => message[key] === undefined ? delete message[k'
  +'ey] : '''');'#10'    });'#10'    sessionStorage.setItem("saved_msgs", JSON.'
  +'stringify(window.WAPI._newMessagesBuffer));'#10#10'    // Inform callbacks '
  +'that the page will be reloaded.'#10'    window.WAPI._newMessagesCallbacks.f'
  +'orEach(function(callbackObj) {'#10'        if (callbackObj.callback !== und'
  +'efined) {'#10'            callbackObj.callback({'#10'                status'
  +': -1,'#10'                message: ''page will be reloaded, wait and regist'
  +'er callback again.'''#10'            });'#10'        }'#10'    });'#10'};'
  +#10#10'window.addEventListener("unload", window.WAPI._unloadInform, false);'
  +#10'window.addEventListener("beforeunload", window.WAPI._unloadInform, false'
  +');'#10'window.addEventListener("pageunload", window.WAPI._unloadInform, fal'
  +'se);'#10#10'/**'#10' * Registers a callback to be called when a new message'
  +' arrives the WAPI.'#10' * @param rmCallbackAfterUse - Boolean - Specify if '
  +'the callback need to be executed only once'#10' * @param done - function - '
  +'Callback function to be called when a new message arrives.'#10' * @returns '
  +'{boolean}'#10' */'#10'window.WAPI.waitNewMessages = function(rmCallbackAfte'
  +'rUse = true, done) {'#10'    window.WAPI._newMessagesCallbacks.push({'#10' '
  +'       callback: done,'#10'        rmAfterUse: rmCallbackAfterUse'#10'    }'
  +');'#10'    return true;'#10'};'#10#10'/**'#10' * Reads buffered new message'
  +'s.'#10' * @param done - function - Callback function to be called contained'
  +' the buffered messages.'#10' * @returns {Array}'#10' */'#10'window.WAPI.get'
  +'BufferedNewMessages = function(done) {'#10'    let bufferedMessages = windo'
  +'w.WAPI._newMessagesBuffer;'#10'    window.WAPI._newMessagesBuffer = [];'#10
  +'    if (done !== undefined) {'#10'        done(bufferedMessages);'#10'    }'
  +#10'    return bufferedMessages;'#10'};'#10'/** End new messages observable '
  +'functions **/'#10#10'window.WAPI.sendImage = function(imgBase64, chatid, fi'
  +'lename, caption) {'#10'    // var idUser = new window.Store.UserConstructor'
  +'(chatid);'#10'    var idUser = new Store.WidFactory.createWid(chatid, {'#10
  +'        intentionallyUsePrivateConstructor: true'#10'    });'#10#9#10'    '
  +#10'        return Store.FindChat.findChat(idUser).then((chat) => {'#10'    '
  +'                var mediaBlob = window.WAPI.base64ImageToFile(imgBase64, fi'
  +'lename);'#10'            var mc = new Store.MediaCollection(chat);'#10'    '
  +'        '#10'            //Deprecated  - Mike Lustosa 19/02/2020'#10'      '
  +'      /*mc.processFiles([mediaBlob], chat, 1).then(() => {'#10'            '
  +'    var media = mc.models[0];'#10'                media.sendToChat(chat, {'
  +#10'                    caption: caption'#10'                });'#10'       '
  +'         if (done !== undefined) done(true);'#10'            });*/'#10'    '
  ,#10'            //New - Mike Lustosa 19/02/2020'#10'            mc.processAt'
  +'tachments([{file: mediaBlob}, 1], chat, 1).then(() => {'#10'               '
  +' let media = mc.models[0];'#10'                media.sendToChat(chat, {capt'
  +'ion:caption});'#10'                return true;'#10'            });'#10'   '
  +'     });'#10'    '#10#10'    // return Store.FindChat.findChat(idUser).then'
  +'((chat) => {'#10'    //     var mediaBlob = window.WAPI.base64ImageToFile(i'
  +'mgBase64, filename);'#10'    //     var mc = new Store.MediaCollection(chat'
  +');'#10'        '#10'    //     //Deprecated  - Mike Lustosa 19/02/2020'#10
  +'    //     /*mc.processFiles([mediaBlob], chat, 1).then(() => {'#10'    // '
  +'        var media = mc.models[0];'#10'    //         media.sendToChat(chat,'
  +' {'#10'    //             caption: caption'#10'    //         });'#10'    /'
  +'/         if (done !== undefined) done(true);'#10'    //     });*/'#10#10' '
  +'   //     //New - Mike Lustosa 19/02/2020'#10'    //     mc.processAttachme'
  +'nts([{file: mediaBlob}, 1], chat, 1).then(() => {'#10'    //         let me'
  +'dia = mc.models[0];'#10'    //         media.sendToChat(chat, {caption:capt'
  +'ion});'#10'    //         if (done !== undefined) done(true);'#10'    //   '
  +'  });'#10'    // });'#10#10'}'#10#10#10'window.WAPI.sendMessageToID = funct'
  +'ion(chatid, msgText) {'#10'    var idUser = new window.Store.UserConstructo'
  +'r(chatid, {'#10'        intentionallyUsePrivateConstructor: true'#10'    })'
  +';'#10#10'    console.log(idUser)'#10#10'    const teste = Store.FindChat.fi'
  +'ndChat(idUser)'#10'        .then(chatid => {'#10'            console.log(te'
  +'ste)'#10'            var mc = new Store.SendTextMsgToChat(chatid, msgText);'
  +#10'            return true;'#10'        })'#10#10'    return teste'#10#10'}'
  +#10#10'window.WAPI.base64ImageToFile = function(b64Data, filename) {'#10'   '
  +' var arr = b64Data.split('','');'#10'    var mime = arr[0].match(/:(.*?);/)'
  +'[1];'#10'    var bstr = atob(arr[1]);'#10'    var n = bstr.length;'#10'    '
  +'var u8arr = new Uint8Array(n);'#10#10'    while (n--) {'#10'        u8arr[n'
  +'] = bstr.charCodeAt(n);'#10'    }'#10#10'    return new File([u8arr], filen'
  +'ame, {'#10'        type: mime'#10'    });'#10'};'#10#10'/**'#10' * Send con'
  +'tact card to a specific chat using the chat ids'#10' *'#10' * @param {strin'
  +'g} to ''000000000000@c.us'''#10' * @param {string|array} contact ''11111111'
  +'1111@c.us'' | [''222222222222@c.us'', ''333333333333@c.us, ... ''nnnnnnnnnn'
  +'nn@c.us'']'#10' */'#10'window.WAPI.sendContact = function(to, contact) {'#10
  +'    if (!Array.isArray(contact)) {'#10'        contact = [contact];'#10'   '
  +' }'#10'    contact = contact.map((c) => {'#10'        return WAPI.getChat(c'
  +').__x_contact;'#10'    });'#10#10'    if (contact.length > 1) {'#10'       '
  +' window.WAPI.getChat(to).sendContactList(contact);'#10'    } else if (conta'
  +'ct.length === 1) {'#10'        window.WAPI.getChat(to).sendContact(contact['
  +'0]);'#10'    }'#10'};'#10#10'/**'#10' * Create an chat ID based in a cloned'
  +' one'#10' *'#10' * @param {string} chatId ''000000000000@c.us'''#10' */'#10
  +'window.WAPI.getNewMessageId = function(chatId) {'#10'    var newMsgId = Sto'
  +'re.Msg.models[0].__x_id.clone();'#10#10'    newMsgId.fromMe = true;'#10'   '
  +' newMsgId.id = WAPI.getNewId().toUpperCase();'#10'    newMsgId.remote = cha'
  +'tId;'#10'    newMsgId._serialized = `${newMsgId.fromMe}_${newMsgId.remote}_'
  +'${newMsgId.id}`'#10#10'    return newMsgId;'#10'};'#10#10'/**'#10' * Send V'
  +'CARD'#10' *'#10' * @param {string} chatId ''000000000000@c.us'''#10' * @par'
  +'am {string} vcard vcard as a string'#10' * @param {string} contactName The '
  +'display name for the contact. CANNOT BE NULL OTHERWISE IT WILL SEND SOME RA'
  +'NDOM CONTACT FROM YOUR ADDRESS BOOK.'#10' * @param {string} contactNumber I'
  +'f supplied, this will be injected into the vcard (VERSION 3 ONLY FROM VCARD'
  +'JS) with the WA id to make it show up with the correct buttons on WA.'#10' '
  +'*/'#10'window.WAPI.sendVCard = async function (chatId, contactNumber, conta'
  +'ctName) {'#10'    '#10'    var idUser = new window.Store.UserConstructor(ch'
  +'atId, {'#10'        intentionallyUsePrivateConstructor: true'#10'    });'#10
  +#10'    const inChat = await WAPI.getContact(chatId)'#10'    const cont = aw'
  +'ait WAPI.getContact(contactNumber)'#10'    const newMsgId = await WAPI.getN'
  +'ewMessageId(chatId)'#10'    '#10'    // console.log(Store.addAndSendMsgToCh'
  +'at)'#10'    // console.log(cont)'#10#10'    if(!cont){'#10'        return'
  +#10'    }'#10#10'    console.log(cont)'#10#10'    var cont2 = cont'#10'    c'
  +'ont2.userid = contactNumber.substring(0, contactNumber.length - 5)'#10#10' '
  +'   let queue = Store.Chat.get(chatId)'#10#10'    const chat = await Store.F'
  +'indChat.findChat(idUser)'#10'    '#10'    // chat.addQueue = queue.addQueue'
  +#10'    // chat.addQueue.enqueue = queue.addQueue.__proto__.enqueue'#10'    '
  +'// // chat.msgs = queue.msgs'#10'    // // chat.msgs.add = queue.msgs.__pro'
  ,'to__.add'#10'    // chat.sendQueue = queue.sendQueue'#10'    // chat.sendQu'
  +'eue.enqueue = queue.sendQueue.__proto__.enqueue'#10#10#10'    const newchat'
  +' = Object.assign(chat, queue);'#10'    '#10'    // chat.lastReceivedKey._se'
  +'rialized = inChat._serialized;'#10'    // chat.lastReceivedKey.id = inChat.'
  +'id;'#10#10'    // var tempMsg = Object.create(Store.Msg.models.filter(msg ='
  +'> msg.__x_isSentByMe && !msg.quotedMsg)[0]);'#10'    const fromWid = await '
  +'window.Store.Conn.wid'#10'    const name = !contactName ? cont.__x_formatte'
  +'dTitle : contactName'#10'    const body = await window.Store.Vcard.vcardFro'
  +'mContactModel(cont2)'#10'    console.log(body.vcard)'#10#10'    var message'
  +' = {'#10'        ack: 0,'#10'        id: newMsgId,'#10'        // local: !0'
  +','#10'        self: "in",'#10'        t: parseInt(new Date().getTime() / 10'
  +'00),'#10'        to: newchat.id,'#10'        isNewMsg: true,'#10'        ty'
  +'pe: "vcard",'#10'        from: fromWid,'#10'        // clientUrl:undefined,'
  +#10'        // directPath:undefined,'#10'        // filehash:undefined,'#10
  +'        // uploadhash:undefined,'#10'        // mediaKey:undefined,'#10'   '
  +'     // isQuotedMsgAvailable:false,'#10'        // invis:false,'#10'       '
  +' // mediaKeyTimestamp:undefined,'#10'        // mimetype:undefined,'#10'   '
  +'     // height:undefined,'#10'        // width:undefined,'#10'        // ep'
  +'hemeralStartTimestamp:undefined,'#10'        body: body.vcard,'#10'        '
  +'// mediaData:undefined,'#10'        isQuotedMsgAvailable: false,'#10'      '
  +'  // subtype: contactName, '#10'        vcardFormattedName: name'#10'    };'
  +#10'    // Object.assign(tempMsg, extend);'#10'    console.log(Store.addAndS'
  +'endMsgToChat)'#10'    return (await Promise.all(Store.addAndSendMsgToChat(n'
  +'ewchat, message)))[1]=="success"'#10'};'#10#10#10'/**'#10' * Block contact'
  +#10' * @param {string} id ''000000000000@c.us'''#10' * @param {*} done - fun'
  +'ction - Callback function to be called when a new message arrives.'#10' */'
  +#10'window.WAPI.contactBlock = function(id, done) {'#10'        const contac'
  +'t = window.Store.Contact.get(id);'#10'        if (contact !== undefined) {'
  +#10'            contact.setBlock(!0);'#10'            done(true);'#10'      '
  +'      return true;'#10'        }'#10'        done(false);'#10'        retur'
  +'n false;'#10'    }'#10'    /**'#10'     * unBlock contact'#10'     * @param'
  +' {string} id ''000000000000@c.us'''#10'     * @param {*} done - function - '
  +'Callback function to be called when a new message arrives.'#10'     */'#10
  +'window.WAPI.contactUnblock = function(id, done) {'#10'    const contact = w'
  +'indow.Store.Contact.get(id);'#10'    if (contact !== undefined) {'#10'     '
  +'   contact.setBlock(!1);'#10'        done(true);'#10'        return true;'
  +#10'    }'#10'    done(false);'#10'    return false;'#10'}'#10#10#10'/** Joi'
  +'ns a group via the invite link, code, or message'#10' * @param link This pa'
  +'ram is the string which includes the invite link or code. The following wor'
  +'k:'#10' * - Follow this link to join my WA group: https://chat.whatsapp.com'
  +'/DHTGJUfFJAV9MxOpZO1fBZ'#10' * - https://chat.whatsapp.com/DHTGJUfFJAV9MxOp'
  +'ZO1fBZ'#10' * - DHTGJUfFJAV9MxOpZO1fBZ'#10' * @returns Promise<string | boo'
  +'lean> Either false if it didn''t work, or the group id.'#10' */'#10'window.'
  +'WAPI.joinGroupViaLink = async function(link){'#10'    let code = link;'#10
  +'    //is it a link? if not, assume it''s a code, otherwise, process the lin'
  +'k to get the code.'#10'    if(link.includes(''chat.whatsapp.com'')) {'#10' '
  +'       if(!link.match(/chat.whatsapp.com\/([\w\d]*)/g).length) return false'
  +';'#10'        code = link.match(/chat.whatsapp.com\/([\w\d]*)/g)[0].replace'
  +'(''chat.whatsapp.com\/'','''');'#10'    }'#10'    const group = await Store'
  +'.GroupInvite.joinGroupViaInvite(code);'#10'    if(!group.id) return false;'
  +#10'    return group.id._serialized'#10'}'#10#10'/**'#10' * Add participant '
  +'to Group'#10' * @param {*} idGroup ''0000000000-00000000@g.us'''#10' * @par'
  +'am {*} idParticipant ''000000000000@c.us'''#10' */'#10'window.WAPI.addParti'
  +'cipant = async function (idGroup, idParticipant) {'#10'    const chat = Sto'
  +'re.Chat.get(idGroup);'#10'    const add = Store.Contact.get(idParticipant);'
  +#10'    await window.Store.Participants.addParticipants(chat, [add]);'#10'  '
  +'  return true;'#10'}'#10#10#10'/**'#10' * Remove participant of Group'#10' '
  +'* @param {*} idGroup ''0000000000-00000000@g.us'''#10' * @param {*} idParti'
  +'cipant ''000000000000@c.us'''#10' */'#10'window.WAPI.removeParticipant = as'
  +'ync function (idGroup, idParticipant) {'#10'    const chat = Store.Chat.get'
  +'(idGroup);'#10'    const rm = chat.groupMetadata.participants.get(idPartici'
  +'pant);'#10'    await window.Store.Participants.removeParticipants(chat, [rm'
  +']);'#10'    return true;'#10'}'#10#10'/**'#10' * Promote Participant to Adm'
  +'in in Group'#10' * @param {*} idGroup ''0000000000-00000000@g.us'''#10' * @'
  ,'param {*} idParticipant ''000000000000@c.us'''#10' */'#10'window.WAPI.promo'
  +'teParticipant = async function (idGroup, idParticipant) {'#10'    const cha'
  +'t = Store.Chat.get(idGroup);'#10'    const promote = chat.groupMetadata.par'
  +'ticipants.get(idParticipant);'#10'    await window.Store.Participants.promo'
  +'teParticipants(chat, [promote]);'#10'    return true;'#10'}'#10#10'/**'#10
  +' * Demote Admin of Group'#10' * @param {*} idGroup ''0000000000-00000000@g.'
  +'us'''#10' * @param {*} idParticipant ''000000000000@c.us'''#10' */'#10'wind'
  +'ow.WAPI.demoteParticipant = async function (idGroup, idParticipant) {'#10' '
  +'   await window.Store.WapQuery.demoteParticipants(idGroup, [idParticipant])'
  +#10'    const chat = Store.Chat.get(idGroup);'#10'    const demote = chat.gr'
  +'oupMetadata.participants.get(idParticipant);'#10'    await window.Store.Par'
  +'ticipants.demoteParticipants(chat, [demote])'#10'    return true'#10'   '#10
  +'}'#10#10'//Nova funcao alternativa para enviar mensagens(Nao envia para gru'
  +'pos)'#10'//Criada em 27/11/2019 Mike'#10'window.WAPI.sendMessageToID2 = fun'
  +'ction(id, msgText) {'#10'    '#10'    window.Store.WapQuery.queryExist(id).'
  +'then(function(e) {'#10'        if (e.status === 200) {'#10'            wind'
  +'ow.Store.FindChat.findChat(e.jid).then((chat) => {'#10'                try '
  +'{'#10'                    window.Store.SendTextMsgToChat(chat, msgText);'#10
  +'                    return true;'#10'                } catch (e) {'#10'    '
  +'                return false;'#10'                }'#10'            });'#10
  +'            return true;'#10'        } else {'#10'            return false;'
  +#10'        }'#10'    });'#10#10'        return false;'#10'    '#10'}'#10#10
  +'//Validar numero whatsapp 12/02/2020'#10'window.WAPI.isValidNumber = async '
  +'function (phoneId) {'#10'    isValid = window.Store.WapQuery.queryExist(pho'
  +'neId).then(result => {'#10'        return result.jid !== undefined;'#10'   '
  +' }).catch((e) => {'#10'        return false;'#10'    });'#10#10'    return '
  +'isValid;'#10'};'#10#10'/** 28/04/2020 - Mike'#10' * Send location'#10' *'#10
  +' * @param {string} chatId ''558199999999@c.us'''#10' * @param {string} lat '
  +'latitude'#10' * @param {string} lng longitude'#10' * @param {string} loc Te'
  +'xto link para a localizacao'#10' */'#10' '#10' '#10'window.WAPI.sendLocatio'
  +'n = async function (chatId, lat, lng, loc) {'#10#10'    var idUser = new wi'
  +'ndow.Store.UserConstructor(chatId, {'#10'        intentionallyUsePrivateCon'
  +'structor: true'#10'    });'#10#10'    const fromwWid = await window.Store.C'
  +'onn.wid;'#10#10'    const inChat = await Store.FindChat.findChat(idUser)'#10
  +#10'    let queue = Store.Contact.get(chatId);'#10#10'    const newchat = Ob'
  +'ject.assign(queue, inChat);'#10#10'    console.log(queue)'#10'    '#10'    '
  +'console.log(newchat)'#10'    // chat.lastReceivedKey._serialized = inChat._'
  +'serialized;'#10'    // chat.lastReceivedKey.id = inChat.id;'#10#10'    // v'
  +'ar tempMsg = Object.create(Store.Msg.models.filter(msg => msg.__x_isSentByM'
  +'e && !msg.quotedMsg)[0]);'#10'    var newId = window.WAPI.getNewMessageId(c'
  +'hatId);'#10'    var message = {'#10'        ack: 0,'#10'        id: newId,'
  +#10'        local: true,'#10'        self: "in",'#10'        t: parseInt(new'
  +' Date().getTime() / 1000),'#10'        to: chatId,'#10'        isNewMsg: tr'
  +'ue,'#10'        type: "location",'#10'        lat,'#10'        lng,'#10'   '
  +'     loc,'#10'        from: fromwWid'#10'    };'#10'    // Object.assign(te'
  +'mpMsg, extend);'#10'    return await Promise.all(Store.addAndSendMsgToChat('
  +'newchat, message))'#10'};'#10#10'// Novas Funcoes incluidas por Marcelo San'
  +'tos'#10#10'window.WAPI.quickClean = function (ob) {return JSON.parse(JSON.s'
  +'tringify(ob))};'#10#10'window.WAPI.setMyName = async function (newName) {'
  +#10#9'return await window.Store.Perfil.setPushname(newName);'#10'}'#10#10'wi'
  +'ndow.WAPI.clearChat = async function (id) {'#10'    return await Store.Chat'
  +'Util.sendClear(Store.Chat.get(id),true);'#10'}'#10#10'window.WAPI.setMyStat'
  +'us = function (newStatus) {'#10'    return Store.MyStatus.setMyStatus(newSt'
  +'atus)'#10'}'#10#10'window.WAPI.revokeGroupInviteLink = async function (chat'
  +'Id) {'#10'    var chat = Store.Chat.get(chatId);'#10'    if(!chat.isGroup) '
  +'return false;'#10'    await Store.GroupInvite.revokeGroupInvite(chat);'#10
  +'    return true;'#10'}'#10#10'function SetConsoleMessageString(jsName, Stri'
  +'ngValue) {'#10'    Obj = {'#10'        name: jsName,'#10'        result: St'
  +'ringValue'#10'    }'#10'    console.log(JSON.stringify(Obj));'#10'}'#10#10
  +#10'window.WAPI.getGroupInviteLink = async function (chatId) {'#10'    let c'
  +'hat = Store.Chat.get(chatId);'#10#10#9'let code = chat.groupMetadata && cha'
  +'t.groupMetadata.inviteCode  ? '#10#9'chat.groupMetadata.inviteCode : await '
  +'Store.GroupInvite.sendQueryGroupInviteCode(chat.id);'#9#10'    SetConsoleMe'
  +'ssageString("GetGroupInviteLink", `https://chat.whatsapp.com/${code}`);'#10
  ,#9'return `https://chat.whatsapp.com/${code}`;'#10#10'}'#10#10'/**'#10' * Re'
  +'turns an object with all of your host device details'#10' */'#10'window.WAP'
  +'I.getMe = function(){'#10'   '#9#10#9'vMe = {...WAPI.quickClean({'#10'     '
  +'   ...Store.Contact.get(Store.Me.wid).attributes,'#10'        ...Store.Me.a'
  +'ttributes'#10'    }),'#10'    me:Store.Me.me};'#10' '#10'  SetConsoleMessag'
  +'e("GetMe", JSON.stringify(vMe)); '#10'  '#10'  return vMe;'#10'    '#10'}'
  +#10#10'window.WAPI.getStatus = async (id) => {'#10' SetConsoleMessage("GetSt'
  +'atusMessage", JSON.stringify(await Store.MyStatus.getStatus(id)));'#9' '#10
  +' //return status; '#10'}'#10#10'window.WAPI.checkNumberStatus = async funct'
  +'ion (id) {'#10'    try {'#10'        const result = await window.Store.WapQ'
  +'uery.queryExist(id);'#10'        if (result.jid === undefined) throw 404;'
  +#10'        const data = window.WAPI._serializeNumberStatusObj(result);'#10
  +'        if (data.status == 200) data.numberExists = true'#10'      SetConso'
  +'leMessage("NewCheckIsValidNumber",    JSON.stringify({ id : id, valid : dat'
  +'a.numberExists}));     '#10#9' return data;'#10#9#9#10'    } catch (e) {'#10
  +'            SetConsoleMessage("NewCheckIsValidNumber", JSON.stringify({ id '
  +': id,  valid : false}));'#10#9#9#9'return window.WAPI._serializeNumberStatu'
  +'sObj({'#10'                status: e,'#10'                jid: id'#10'     '
  +'       });'#10'    }'#10'};'#10#10'window.WAPI.sendButtons = async function'
  +' (chatId, title, buttons, description = '''') {'#10'    let options = {'#10
  +'        footer: description,'#10'        isDynamicReplyButtonsMsg: true,'#10
  +'        dynamicReplyButtons: buttons'#10'    };'#10'    '#10'    return WAP'
  +'I.sendMessageOptions(chatId, title, options);'#10'};'#10#10'window.WAPI.sen'
  +'dMessageOptions = async function (chatId, content, options = {}) {'#10'    '
  +'var idUser = new window.Store.UserConstructor(chatId, {'#10'        intenti'
  +'onallyUsePrivateConstructor: true'#10'    });'#10#10'    let queue = Store.'
  +'Chat.get(chatId)'#10#10'    const newChat = await Store.FindChat.findChat(i'
  +'dUser)'#10#10'    const chat = Object.assign(newChat, queue);'#10'    '#10
  +#10'    let attOptions = {};'#10'    if (options.attachment) {'#10'      att'
  +'Options = await WWebJS.processMediaData('#10'        options.attachment,'#10
  +'        options.sendAudioAsVoice'#10'      );'#10'      content = attOption'
  +'s.preview;'#10'      delete options.attachment;'#10'    }'#10'  '#10'    le'
  +'t quotedMsgOptions = {};'#10'    if (options.quotedMessageId) {'#10'      l'
  +'et quotedMessage = await getMessageById('#10'        options.quotedMessageI'
  +'d,'#10'        null,'#10'        false'#10'      );'#10'      if (quotedMes'
  +'sage && quotedMessage.canReply()) {'#10'        quotedMsgOptions = quotedMe'
  +'ssage.msgContextInfo(chat);'#10'      }'#10'      delete options.quotedMess'
  +'ageId;'#10'    }'#10'  '#10'    if (options.mentionedJidList) {'#10'      o'
  +'ptions.mentionedJidList = options.mentionedJidList.map('#10'        (cId) ='
  +'> window.Store.Contact.get(cId).id'#10'      );'#10'    }'#10'  '#10'    le'
  +'t locationOptions = {};'#10'    if (options.location) {'#10'      locationO'
  +'ptions = {'#10'        type: ''location'','#10'        loc: options.locatio'
  +'n.description,'#10'        lat: options.location.latitude,'#10'        lng:'
  +' options.location.longitude,'#10'      };'#10'      delete options.location'
  +';'#10'    }'#10'  '#10'    let vcardOptions = {};'#10'    if (options.conta'
  +'ctCard) {'#10'      let contact = window.Store.Contact.get(options.contactC'
  +'ard);'#10'      vcardOptions = {'#10'        body: window.Store.VCard.vcard'
  +'FromContactModel(contact).vcard,'#10'        type: ''vcard'','#10'        v'
  +'cardFormattedName: contact.formattedName,'#10'      };'#10'      delete opt'
  +'ions.contactCard;'#10'    } else if (options.contactCardList) {'#10'      l'
  +'et contacts = options.contactCardList.map((c) =>'#10'        window.Store.C'
  +'ontact.get(c)'#10'      );'#10'      let vcards = contacts.map((c) =>'#10' '
  +'       window.Store.VCard.vcardFromContactModel(c)'#10'      );'#10'      v'
  +'cardOptions = {'#10'        type: ''multi_vcard'','#10'        vcardList: v'
  +'cards,'#10'        body: undefined,'#10'      };'#10'      delete options.c'
  +'ontactCardList;'#10'    } else if ('#10'      options.parseVCards &&'#10'  '
  +'    typeof content === ''string'' &&'#10'      content.startsWith(''BEGIN:V'
  +'CARD'')'#10'    ) {'#10'      delete options.parseVCards;'#10'      try {'
  +#10'        const parsed = await window.Store.VCard.parseVcard(content);'#10
  +'        if (parsed) {'#10'          vcardOptions = {'#10'            type: '
  +'''vcard'','#10'            vcardFormattedName: await window.Store.VCard.vca'
  +'rdGetNameFromParsed('#10'              parsed'#10'            ),'#10'      '
  +'    };'#10'        }'#10'      } catch (_) {'#10'        // not a vcard'#10
  +'      }'#10'    }'#10'  '#10'    if (options.linkPreview) {'#10'      delet'
  ,'e options.linkPreview;'#10'      const link = await window.Store.Validators'
  +'.findLink(content);'#10'      if (link) {'#10'        const preview = await'
  +' window.Store.Wap2.default.queryLinkPreview('#10'          link.url'#10'   '
  +'     );'#10'        preview.preview = true;'#10'        preview.subtype = '
  +'''url'';'#10'        options = { ...options, ...preview };'#10'      }'#10
  +'    }'#10'    const newMsgId = await window.WAPI.getNewMessageId(chat.id);'
  +#10'    const fromwWid = await Store.UserPrefs.getMaybeMeUser();'#10'    con'
  +'st message = {'#10'      ...options,'#10'      id: newMsgId,'#10'      ack:'
  +' 0,'#10'      body: content,'#10'      from: fromwWid,'#10'      to: chat.i'
  +'d,'#10'      local: !0,'#10'      self: ''out'','#10'      t: parseInt(new '
  +'Date().getTime() / 1000),'#10'      isNewMsg: !0,'#10'      type: ''chat'','
  +#10'      ...locationOptions,'#10'      ...attOptions,'#10'      ...quotedMs'
  +'gOptions,'#10'      ...vcardOptions,'#10'    };'#10'  '#10'    await window'
  +'.Store.addAndSendMsgToChat(chat, message);'#10'  '#10'    return newMsgId._'
  +'serialized;'#10'};'#10
]);
